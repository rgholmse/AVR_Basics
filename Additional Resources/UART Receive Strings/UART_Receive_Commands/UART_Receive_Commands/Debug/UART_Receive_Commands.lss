
UART_Receive_Commands.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000182  00804000  000009e4  00000a78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  00804182  00804182  00000bfa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bfa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000037c6  00000000  00000000  00000cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000319d  00000000  00000000  0000449e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000529  00000000  00000000  0000763b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  00007b64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001960  00000000  00000000  00007c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002db  00000000  00000000  000095ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00009887  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__vector_31>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	df e7       	ldi	r29, 0x7F	; 127
  f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_copy_data>:
  f4:	11 e4       	ldi	r17, 0x41	; 65
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b0 e4       	ldi	r27, 0x40	; 64
  fa:	e4 ee       	ldi	r30, 0xE4	; 228
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 38       	cpi	r26, 0x82	; 130
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	21 e4       	ldi	r18, 0x41	; 65
 110:	a2 e8       	ldi	r26, 0x82	; 130
 112:	b1 e4       	ldi	r27, 0x41	; 65
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 3e       	cpi	r26, 0xEA	; 234
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
 122:	0c 94 f0 04 	jmp	0x9e0	; 0x9e0 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <_Z13cdc_send_charc>:


void cdc_send_char(char c)
{
    // Wait for USART1 to be ready for new data
    while (!(USART1.STATUS & USART_DREIF_bm));
 12a:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 12e:	95 ff       	sbrs	r25, 5
 130:	fc cf       	rjmp	.-8      	; 0x12a <_Z13cdc_send_charc>
    
    // Give new data to USART 1
    USART1.TXDATAL = c;
 132:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
 136:	08 95       	ret

00000138 <_Z15cdc_send_stringPKc>:
}
void cdc_send_string(const char* str)
{
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
 13e:	ec 01       	movw	r28, r24
    for (uint8_t i=0; i < strlen(str); i++)
 140:	10 e0       	ldi	r17, 0x00	; 0
 142:	81 2f       	mov	r24, r17
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	fe 01       	movw	r30, r28
 148:	01 90       	ld	r0, Z+
 14a:	00 20       	and	r0, r0
 14c:	e9 f7       	brne	.-6      	; 0x148 <_Z15cdc_send_stringPKc+0x10>
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	ec 1b       	sub	r30, r28
 152:	fd 0b       	sbc	r31, r29
 154:	8e 17       	cp	r24, r30
 156:	9f 07       	cpc	r25, r31
 158:	40 f4       	brcc	.+16     	; 0x16a <_Z15cdc_send_stringPKc+0x32>
    {
        cdc_send_char(str[i]);
 15a:	fe 01       	movw	r30, r28
 15c:	e8 0f       	add	r30, r24
 15e:	f9 1f       	adc	r31, r25
 160:	80 81       	ld	r24, Z
 162:	0e 94 95 00 	call	0x12a	; 0x12a <_Z13cdc_send_charc>
    // Give new data to USART 1
    USART1.TXDATAL = c;
}
void cdc_send_string(const char* str)
{
    for (uint8_t i=0; i < strlen(str); i++)
 166:	1f 5f       	subi	r17, 0xFF	; 255
 168:	ec cf       	rjmp	.-40     	; 0x142 <_Z15cdc_send_stringPKc+0xa>
    {
        cdc_send_char(str[i]);
    }
}
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	1f 91       	pop	r17
 170:	08 95       	ret

00000172 <_Z9cdc_printPKcz>:
void cdc_print(const char* text, ...)
{
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	cd b7       	in	r28, 0x3d	; 61
 178:	de b7       	in	r29, 0x3e	; 62
 17a:	c4 56       	subi	r28, 0x64	; 100
 17c:	d1 09       	sbc	r29, r1
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	de bf       	out	0x3e, r29	; 62
 182:	ae 01       	movw	r20, r28
 184:	47 59       	subi	r20, 0x97	; 151
 186:	5f 4f       	sbci	r21, 0xFF	; 255
 188:	fa 01       	movw	r30, r20
 18a:	61 91       	ld	r22, Z+
 18c:	71 91       	ld	r23, Z+
 18e:	af 01       	movw	r20, r30
    va_list argptr;
    char buffer[100];
    
    va_start(argptr, text);
    vsprintf(buffer, text, argptr);
 190:	ce 01       	movw	r24, r28
 192:	01 96       	adiw	r24, 0x01	; 1
 194:	0e 94 19 02 	call	0x432	; 0x432 <vsprintf>
    
    cdc_send_string(buffer);
 198:	ce 01       	movw	r24, r28
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	0e 94 9c 00 	call	0x138	; 0x138 <_Z15cdc_send_stringPKc>
    va_end(argptr);
}
 1a0:	cc 59       	subi	r28, 0x9C	; 156
 1a2:	df 4f       	sbci	r29, 0xFF	; 255
 1a4:	cd bf       	out	0x3d, r28	; 61
 1a6:	de bf       	out	0x3e, r29	; 62
 1a8:	df 91       	pop	r29
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <main>:
volatile uint8_t uart_flag = 0, uart_index;
char uart_rxbuf[UART_RXBUF_SIZE];

int main(void) {
    // Enable interrupt of RXDATA received
	USART1.CTRLA	= USART_RXCIE_bm;
 1ae:	e0 e2       	ldi	r30, 0x20	; 32
 1b0:	f8 e0       	ldi	r31, 0x08	; 8
 1b2:	80 e8       	ldi	r24, 0x80	; 128
 1b4:	85 83       	std	Z+5, r24	; 0x05
	
	// Enable USART1 transmitter and receiver
    USART1.CTRLB    = USART_TXEN_bm
					| USART_RXEN_bm;
 1b6:	80 ec       	ldi	r24, 0xC0	; 192
 1b8:	86 83       	std	Z+6, r24	; 0x06
    
    // Configure the baud rate of USART1
    USART1.BAUD     = BAUD(9600);
 1ba:	83 e8       	ldi	r24, 0x83	; 131
 1bc:	96 e0       	ldi	r25, 0x06	; 6
 1be:	80 87       	std	Z+8, r24	; 0x08
 1c0:	91 87       	std	Z+9, r25	; 0x09
    
    // Make PC0 an output
    PORTC.DIRSET    = PIN0_bm;
 1c2:	e0 e4       	ldi	r30, 0x40	; 64
 1c4:	f4 e0       	ldi	r31, 0x04	; 4
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	81 83       	std	Z+1, r24	; 0x01
    
    // Make PC1 an input (optional as it is an input by default)
    PORTC.DIRCLR    = PIN1_bm;
 1ca:	82 e0       	ldi	r24, 0x02	; 2
 1cc:	82 83       	std	Z+2, r24	; 0x02
	
	// Make PC6 output (LED)
	PORTC.DIRSET	= PIN6_bm;
 1ce:	80 e4       	ldi	r24, 0x40	; 64
 1d0:	81 83       	std	Z+1, r24	; 0x01
    
    cdc_print("Command interface. Type \"help\" for help\r\n");
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e4       	ldi	r25, 0x40	; 64
 1d6:	9f 93       	push	r25
 1d8:	8f 93       	push	r24
 1da:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
	
	// Enable interrupts
	sei();
 1de:	78 94       	sei
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
    
    while (1) 
    {
        // Check if new string is received via UART
		if (uart_flag)
 1e4:	80 91 e9 41 	lds	r24, 0x41E9	; 0x8041e9 <uart_flag>
 1e8:	88 23       	and	r24, r24
 1ea:	e1 f3       	breq	.-8      	; 0x1e4 <main+0x36>
		{
			uart_flag = 0;
 1ec:	10 92 e9 41 	sts	0x41E9, r1	; 0x8041e9 <uart_flag>
			
			char *trash, *command;
			uint8_t val;
			
			// Separate words by <space>
			command = strtok(uart_rxbuf, " ");		// First word is command (ASCII)
 1f0:	6a e2       	ldi	r22, 0x2A	; 42
 1f2:	70 e4       	ldi	r23, 0x40	; 64
 1f4:	84 e8       	ldi	r24, 0x84	; 132
 1f6:	91 e4       	ldi	r25, 0x41	; 65
 1f8:	0e 94 dd 01 	call	0x3ba	; 0x3ba <strtok>
 1fc:	d8 2f       	mov	r29, r24
 1fe:	c9 2f       	mov	r28, r25
			val = (uint8_t)atoi(strtok(NULL, " "));	// Second workd is value (integer)
 200:	6a e2       	ldi	r22, 0x2A	; 42
 202:	70 e4       	ldi	r23, 0x40	; 64
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 dd 01 	call	0x3ba	; 0x3ba <strtok>
 20c:	0e 94 bf 01 	call	0x37e	; 0x37e <atoi>
 210:	18 2f       	mov	r17, r24
			
			// Discard all other words
			do 
			{
				trash = strtok(NULL, " ");
 212:	6a e2       	ldi	r22, 0x2A	; 42
 214:	70 e4       	ldi	r23, 0x40	; 64
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <strtok>
			} while (trash != NULL);
 21e:	89 2b       	or	r24, r25
 220:	c1 f7       	brne	.-16     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
			
			// Check commands
			if ((!(strcmp("LED", command))) || (!(strcmp("led", command))))
 222:	6d 2f       	mov	r22, r29
 224:	7c 2f       	mov	r23, r28
 226:	8c e2       	ldi	r24, 0x2C	; 44
 228:	90 e4       	ldi	r25, 0x40	; 64
 22a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <strcmp>
 22e:	89 2b       	or	r24, r25
 230:	41 f0       	breq	.+16     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 232:	6d 2f       	mov	r22, r29
 234:	7c 2f       	mov	r23, r28
 236:	80 e3       	ldi	r24, 0x30	; 48
 238:	90 e4       	ldi	r25, 0x40	; 64
 23a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <strcmp>
 23e:	89 2b       	or	r24, r25
 240:	d9 f4       	brne	.+54     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
			{
				// Command "LED" found! Update LED based on value
				if (val) {
 242:	11 23       	and	r17, r17
 244:	29 f0       	breq	.+10     	; 0x250 <__EEPROM_REGION_LENGTH__+0x50>
					PORTC.OUTSET = PIN6_bm;
 246:	80 e4       	ldi	r24, 0x40	; 64
 248:	80 93 45 04 	sts	0x0445, r24	; 0x800445 <__TEXT_REGION_LENGTH__+0x7e0445>
					val = 1;
 24c:	11 e0       	ldi	r17, 0x01	; 1
 24e:	03 c0       	rjmp	.+6      	; 0x256 <__EEPROM_REGION_LENGTH__+0x56>
				}
				else {
					PORTC.OUTCLR = PIN6_bm;
 250:	80 e4       	ldi	r24, 0x40	; 64
 252:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <__TEXT_REGION_LENGTH__+0x7e0446>
				}
				cdc_print("Command %s acknowledged with value %d\r\n", command, val);
 256:	1f 92       	push	r1
 258:	1f 93       	push	r17
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	84 e3       	ldi	r24, 0x34	; 52
 260:	90 e4       	ldi	r25, 0x40	; 64
 262:	9f 93       	push	r25
 264:	8f 93       	push	r24
 266:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	b6 cf       	rjmp	.-148    	; 0x1e4 <main+0x36>
			}
			
			else if (!(strcmp("help", command)))
 278:	6d 2f       	mov	r22, r29
 27a:	7c 2f       	mov	r23, r28
 27c:	8c e5       	ldi	r24, 0x5C	; 92
 27e:	90 e4       	ldi	r25, 0x40	; 64
 280:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <strcmp>
 284:	89 2b       	or	r24, r25
 286:	f1 f4       	brne	.+60     	; 0x2c4 <__EEPROM_REGION_LENGTH__+0xc4>
			{
				cdc_print("Welcome to the UART Receive Command demo!\r\n\r\n");
 288:	81 e6       	ldi	r24, 0x61	; 97
 28a:	90 e4       	ldi	r25, 0x40	; 64
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
				cdc_print("This demo controls the value of the built-in LED of the Curiosity Nano kit.\r\n");
 294:	8f e8       	ldi	r24, 0x8F	; 143
 296:	90 e4       	ldi	r25, 0x40	; 64
 298:	9f 93       	push	r25
 29a:	8f 93       	push	r24
 29c:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
				cdc_print("Type \"led <x>\" where <x> is an integer value between 0 and 1. The OUT value of\r\n");
 2a0:	8d ed       	ldi	r24, 0xDD	; 221
 2a2:	90 e4       	ldi	r25, 0x40	; 64
 2a4:	9f 93       	push	r25
 2a6:	8f 93       	push	r24
 2a8:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
				cdc_print("PC6 will be SET or CLEARED accordingly!\r\n\r\n");
 2ac:	8e e2       	ldi	r24, 0x2E	; 46
 2ae:	91 e4       	ldi	r25, 0x41	; 65
 2b0:	9f 93       	push	r25
 2b2:	8f 93       	push	r24
 2b4:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
 2b8:	8d b7       	in	r24, 0x3d	; 61
 2ba:	9e b7       	in	r25, 0x3e	; 62
 2bc:	08 96       	adiw	r24, 0x08	; 8
 2be:	8d bf       	out	0x3d, r24	; 61
 2c0:	9e bf       	out	0x3e, r25	; 62
 2c2:	90 cf       	rjmp	.-224    	; 0x1e4 <main+0x36>
			}
			
			else
			{
				cdc_print("Unknown command, type \"help\" for help\r\n");
 2c4:	8a e5       	ldi	r24, 0x5A	; 90
 2c6:	91 e4       	ldi	r25, 0x41	; 65
 2c8:	9f 93       	push	r25
 2ca:	8f 93       	push	r24
 2cc:	0e 94 b9 00 	call	0x172	; 0x172 <_Z9cdc_printPKcz>
 2d0:	0f 90       	pop	r0
 2d2:	0f 90       	pop	r0
 2d4:	87 cf       	rjmp	.-242    	; 0x1e4 <main+0x36>

000002d6 <__vector_31>:
    }
}


ISR(USART1_RXC_vect)
{
 2d6:	1f 92       	push	r1
 2d8:	0f 92       	push	r0
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	0f 92       	push	r0
 2de:	11 24       	eor	r1, r1
 2e0:	0b b6       	in	r0, 0x3b	; 59
 2e2:	0f 92       	push	r0
 2e4:	8f 93       	push	r24
 2e6:	9f 93       	push	r25
 2e8:	ef 93       	push	r30
 2ea:	ff 93       	push	r31
	// Reading RXDATA clears interrupt flag (unique)
	char c = USART1.RXDATAL;
 2ec:	90 91 20 08 	lds	r25, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
	
	// Loopback print value (optional)
	while(!(USART1.STATUS & USART_DREIF_bm));
 2f0:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 2f4:	85 ff       	sbrs	r24, 5
 2f6:	fc cf       	rjmp	.-8      	; 0x2f0 <__vector_31+0x1a>
	USART1.TXDATAL = c;
 2f8:	90 93 22 08 	sts	0x0822, r25	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
	// 
	
	
	// Check if char is text
	if ((c != '\n') && (c != '\r') && (c != '\b'))
 2fc:	9a 30       	cpi	r25, 0x0A	; 10
 2fe:	a9 f0       	breq	.+42     	; 0x32a <__vector_31+0x54>
 300:	9d 30       	cpi	r25, 0x0D	; 13
 302:	99 f0       	breq	.+38     	; 0x32a <__vector_31+0x54>
 304:	98 30       	cpi	r25, 0x08	; 8
 306:	89 f0       	breq	.+34     	; 0x32a <__vector_31+0x54>
	{
		uart_rxbuf[uart_index++] = c;
 308:	e0 91 e8 41 	lds	r30, 0x41E8	; 0x8041e8 <uart_index>
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	8e 0f       	add	r24, r30
 310:	80 93 e8 41 	sts	0x41E8, r24	; 0x8041e8 <uart_index>
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	ec 57       	subi	r30, 0x7C	; 124
 318:	fe 4b       	sbci	r31, 0xBE	; 190
 31a:	90 83       	st	Z, r25
		if (uart_index > UART_RXBUF_SIZE)
 31c:	80 91 e8 41 	lds	r24, 0x41E8	; 0x8041e8 <uart_index>
 320:	85 36       	cpi	r24, 0x65	; 101
 322:	10 f1       	brcs	.+68     	; 0x368 <__vector_31+0x92>
		{
			uart_index = 0;
 324:	10 92 e8 41 	sts	0x41E8, r1	; 0x8041e8 <uart_index>
 328:	1f c0       	rjmp	.+62     	; 0x368 <__vector_31+0x92>
		}
	}
	// If carriage return
	else if (c == '\r')
 32a:	9d 30       	cpi	r25, 0x0D	; 13
 32c:	61 f4       	brne	.+24     	; 0x346 <__vector_31+0x70>
	{
		uart_rxbuf[uart_index] = '\0';
 32e:	e0 91 e8 41 	lds	r30, 0x41E8	; 0x8041e8 <uart_index>
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	ec 57       	subi	r30, 0x7C	; 124
 336:	fe 4b       	sbci	r31, 0xBE	; 190
 338:	10 82       	st	Z, r1
		uart_index = 0;
 33a:	10 92 e8 41 	sts	0x41E8, r1	; 0x8041e8 <uart_index>
		uart_flag = 1;
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	80 93 e9 41 	sts	0x41E9, r24	; 0x8041e9 <uart_flag>
 344:	11 c0       	rjmp	.+34     	; 0x368 <__vector_31+0x92>
	}
	// If backspace
	else if ((c == '\b') && (uart_index))
 346:	98 30       	cpi	r25, 0x08	; 8
 348:	29 f4       	brne	.+10     	; 0x354 <__vector_31+0x7e>
 34a:	80 91 e8 41 	lds	r24, 0x41E8	; 0x8041e8 <uart_index>
 34e:	81 11       	cpse	r24, r1
 350:	03 c0       	rjmp	.+6      	; 0x358 <__vector_31+0x82>
 352:	03 c0       	rjmp	.+6      	; 0x35a <__vector_31+0x84>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	01 c0       	rjmp	.+2      	; 0x35a <__vector_31+0x84>
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	88 23       	and	r24, r24
 35c:	29 f0       	breq	.+10     	; 0x368 <__vector_31+0x92>
	{
		uart_index--;
 35e:	80 91 e8 41 	lds	r24, 0x41E8	; 0x8041e8 <uart_index>
 362:	81 50       	subi	r24, 0x01	; 1
 364:	80 93 e8 41 	sts	0x41E8, r24	; 0x8041e8 <uart_index>
	}
}
 368:	ff 91       	pop	r31
 36a:	ef 91       	pop	r30
 36c:	9f 91       	pop	r25
 36e:	8f 91       	pop	r24
 370:	0f 90       	pop	r0
 372:	0b be       	out	0x3b, r0	; 59
 374:	0f 90       	pop	r0
 376:	0f be       	out	0x3f, r0	; 63
 378:	0f 90       	pop	r0
 37a:	1f 90       	pop	r1
 37c:	18 95       	reti

0000037e <atoi>:
 37e:	fc 01       	movw	r30, r24
 380:	88 27       	eor	r24, r24
 382:	99 27       	eor	r25, r25
 384:	e8 94       	clt
 386:	21 91       	ld	r18, Z+
 388:	20 32       	cpi	r18, 0x20	; 32
 38a:	e9 f3       	breq	.-6      	; 0x386 <atoi+0x8>
 38c:	29 30       	cpi	r18, 0x09	; 9
 38e:	10 f0       	brcs	.+4      	; 0x394 <atoi+0x16>
 390:	2e 30       	cpi	r18, 0x0E	; 14
 392:	c8 f3       	brcs	.-14     	; 0x386 <atoi+0x8>
 394:	2b 32       	cpi	r18, 0x2B	; 43
 396:	41 f0       	breq	.+16     	; 0x3a8 <atoi+0x2a>
 398:	2d 32       	cpi	r18, 0x2D	; 45
 39a:	39 f4       	brne	.+14     	; 0x3aa <atoi+0x2c>
 39c:	68 94       	set
 39e:	04 c0       	rjmp	.+8      	; 0x3a8 <atoi+0x2a>
 3a0:	0e 94 11 02 	call	0x422	; 0x422 <__mulhi_const_10>
 3a4:	82 0f       	add	r24, r18
 3a6:	91 1d       	adc	r25, r1
 3a8:	21 91       	ld	r18, Z+
 3aa:	20 53       	subi	r18, 0x30	; 48
 3ac:	2a 30       	cpi	r18, 0x0A	; 10
 3ae:	c0 f3       	brcs	.-16     	; 0x3a0 <atoi+0x22>
 3b0:	1e f4       	brtc	.+6      	; 0x3b8 <atoi+0x3a>
 3b2:	90 95       	com	r25
 3b4:	81 95       	neg	r24
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	08 95       	ret

000003ba <strtok>:
 3ba:	42 e8       	ldi	r20, 0x82	; 130
 3bc:	51 e4       	ldi	r21, 0x41	; 65
 3be:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <strtok_r>

000003c2 <strcmp>:
 3c2:	fb 01       	movw	r30, r22
 3c4:	dc 01       	movw	r26, r24
 3c6:	8d 91       	ld	r24, X+
 3c8:	01 90       	ld	r0, Z+
 3ca:	80 19       	sub	r24, r0
 3cc:	01 10       	cpse	r0, r1
 3ce:	d9 f3       	breq	.-10     	; 0x3c6 <strcmp+0x4>
 3d0:	99 0b       	sbc	r25, r25
 3d2:	08 95       	ret

000003d4 <strtok_r>:
 3d4:	fa 01       	movw	r30, r20
 3d6:	a1 91       	ld	r26, Z+
 3d8:	b0 81       	ld	r27, Z
 3da:	00 97       	sbiw	r24, 0x00	; 0
 3dc:	19 f4       	brne	.+6      	; 0x3e4 <strtok_r+0x10>
 3de:	10 97       	sbiw	r26, 0x00	; 0
 3e0:	e1 f0       	breq	.+56     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e2:	cd 01       	movw	r24, r26
 3e4:	dc 01       	movw	r26, r24
 3e6:	cd 01       	movw	r24, r26
 3e8:	0d 90       	ld	r0, X+
 3ea:	00 20       	and	r0, r0
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <strtok_r+0x1e>
 3ee:	c0 01       	movw	r24, r0
 3f0:	13 c0       	rjmp	.+38     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3f2:	fb 01       	movw	r30, r22
 3f4:	21 91       	ld	r18, Z+
 3f6:	22 23       	and	r18, r18
 3f8:	19 f0       	breq	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	20 15       	cp	r18, r0
 3fc:	d9 f7       	brne	.-10     	; 0x3f4 <strtok_r+0x20>
 3fe:	f3 cf       	rjmp	.-26     	; 0x3e6 <strtok_r+0x12>
 400:	fb 01       	movw	r30, r22
 402:	21 91       	ld	r18, Z+
 404:	20 15       	cp	r18, r0
 406:	19 f4       	brne	.+6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 408:	1e 92       	st	-X, r1
 40a:	11 96       	adiw	r26, 0x01	; 1
 40c:	06 c0       	rjmp	.+12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40e:	22 23       	and	r18, r18
 410:	c1 f7       	brne	.-16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 412:	0d 90       	ld	r0, X+
 414:	00 20       	and	r0, r0
 416:	a1 f7       	brne	.-24     	; 0x400 <__LOCK_REGION_LENGTH__>
 418:	d0 01       	movw	r26, r0
 41a:	fa 01       	movw	r30, r20
 41c:	a1 93       	st	Z+, r26
 41e:	b0 83       	st	Z, r27
 420:	08 95       	ret

00000422 <__mulhi_const_10>:
 422:	7a e0       	ldi	r23, 0x0A	; 10
 424:	97 9f       	mul	r25, r23
 426:	90 2d       	mov	r25, r0
 428:	87 9f       	mul	r24, r23
 42a:	80 2d       	mov	r24, r0
 42c:	91 0d       	add	r25, r1
 42e:	11 24       	eor	r1, r1
 430:	08 95       	ret

00000432 <vsprintf>:
 432:	0f 93       	push	r16
 434:	1f 93       	push	r17
 436:	cf 93       	push	r28
 438:	df 93       	push	r29
 43a:	cd b7       	in	r28, 0x3d	; 61
 43c:	de b7       	in	r29, 0x3e	; 62
 43e:	2e 97       	sbiw	r28, 0x0e	; 14
 440:	cd bf       	out	0x3d, r28	; 61
 442:	de bf       	out	0x3e, r29	; 62
 444:	8c 01       	movw	r16, r24
 446:	86 e0       	ldi	r24, 0x06	; 6
 448:	8c 83       	std	Y+4, r24	; 0x04
 44a:	09 83       	std	Y+1, r16	; 0x01
 44c:	1a 83       	std	Y+2, r17	; 0x02
 44e:	8f ef       	ldi	r24, 0xFF	; 255
 450:	9f e7       	ldi	r25, 0x7F	; 127
 452:	8d 83       	std	Y+5, r24	; 0x05
 454:	9e 83       	std	Y+6, r25	; 0x06
 456:	ce 01       	movw	r24, r28
 458:	01 96       	adiw	r24, 0x01	; 1
 45a:	0e 94 3c 02 	call	0x478	; 0x478 <vfprintf>
 45e:	ef 81       	ldd	r30, Y+7	; 0x07
 460:	f8 85       	ldd	r31, Y+8	; 0x08
 462:	e0 0f       	add	r30, r16
 464:	f1 1f       	adc	r31, r17
 466:	10 82       	st	Z, r1
 468:	2e 96       	adiw	r28, 0x0e	; 14
 46a:	cd bf       	out	0x3d, r28	; 61
 46c:	de bf       	out	0x3e, r29	; 62
 46e:	df 91       	pop	r29
 470:	cf 91       	pop	r28
 472:	1f 91       	pop	r17
 474:	0f 91       	pop	r16
 476:	08 95       	ret

00000478 <vfprintf>:
 478:	2f 92       	push	r2
 47a:	3f 92       	push	r3
 47c:	4f 92       	push	r4
 47e:	5f 92       	push	r5
 480:	6f 92       	push	r6
 482:	7f 92       	push	r7
 484:	8f 92       	push	r8
 486:	9f 92       	push	r9
 488:	af 92       	push	r10
 48a:	bf 92       	push	r11
 48c:	cf 92       	push	r12
 48e:	df 92       	push	r13
 490:	ef 92       	push	r14
 492:	ff 92       	push	r15
 494:	0f 93       	push	r16
 496:	1f 93       	push	r17
 498:	cf 93       	push	r28
 49a:	df 93       	push	r29
 49c:	cd b7       	in	r28, 0x3d	; 61
 49e:	de b7       	in	r29, 0x3e	; 62
 4a0:	2b 97       	sbiw	r28, 0x0b	; 11
 4a2:	cd bf       	out	0x3d, r28	; 61
 4a4:	de bf       	out	0x3e, r29	; 62
 4a6:	6c 01       	movw	r12, r24
 4a8:	7b 01       	movw	r14, r22
 4aa:	8a 01       	movw	r16, r20
 4ac:	fc 01       	movw	r30, r24
 4ae:	16 82       	std	Z+6, r1	; 0x06
 4b0:	17 82       	std	Z+7, r1	; 0x07
 4b2:	83 81       	ldd	r24, Z+3	; 0x03
 4b4:	81 ff       	sbrs	r24, 1
 4b6:	cc c1       	rjmp	.+920    	; 0x850 <vfprintf+0x3d8>
 4b8:	ce 01       	movw	r24, r28
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	3c 01       	movw	r6, r24
 4be:	f6 01       	movw	r30, r12
 4c0:	93 81       	ldd	r25, Z+3	; 0x03
 4c2:	f7 01       	movw	r30, r14
 4c4:	93 fd       	sbrc	r25, 3
 4c6:	85 91       	lpm	r24, Z+
 4c8:	93 ff       	sbrs	r25, 3
 4ca:	81 91       	ld	r24, Z+
 4cc:	7f 01       	movw	r14, r30
 4ce:	88 23       	and	r24, r24
 4d0:	09 f4       	brne	.+2      	; 0x4d4 <vfprintf+0x5c>
 4d2:	ba c1       	rjmp	.+884    	; 0x848 <vfprintf+0x3d0>
 4d4:	85 32       	cpi	r24, 0x25	; 37
 4d6:	39 f4       	brne	.+14     	; 0x4e6 <vfprintf+0x6e>
 4d8:	93 fd       	sbrc	r25, 3
 4da:	85 91       	lpm	r24, Z+
 4dc:	93 ff       	sbrs	r25, 3
 4de:	81 91       	ld	r24, Z+
 4e0:	7f 01       	movw	r14, r30
 4e2:	85 32       	cpi	r24, 0x25	; 37
 4e4:	29 f4       	brne	.+10     	; 0x4f0 <vfprintf+0x78>
 4e6:	b6 01       	movw	r22, r12
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 4ee:	e7 cf       	rjmp	.-50     	; 0x4be <vfprintf+0x46>
 4f0:	91 2c       	mov	r9, r1
 4f2:	21 2c       	mov	r2, r1
 4f4:	31 2c       	mov	r3, r1
 4f6:	ff e1       	ldi	r31, 0x1F	; 31
 4f8:	f3 15       	cp	r31, r3
 4fa:	d8 f0       	brcs	.+54     	; 0x532 <vfprintf+0xba>
 4fc:	8b 32       	cpi	r24, 0x2B	; 43
 4fe:	79 f0       	breq	.+30     	; 0x51e <vfprintf+0xa6>
 500:	38 f4       	brcc	.+14     	; 0x510 <vfprintf+0x98>
 502:	80 32       	cpi	r24, 0x20	; 32
 504:	79 f0       	breq	.+30     	; 0x524 <vfprintf+0xac>
 506:	83 32       	cpi	r24, 0x23	; 35
 508:	a1 f4       	brne	.+40     	; 0x532 <vfprintf+0xba>
 50a:	23 2d       	mov	r18, r3
 50c:	20 61       	ori	r18, 0x10	; 16
 50e:	1d c0       	rjmp	.+58     	; 0x54a <vfprintf+0xd2>
 510:	8d 32       	cpi	r24, 0x2D	; 45
 512:	61 f0       	breq	.+24     	; 0x52c <vfprintf+0xb4>
 514:	80 33       	cpi	r24, 0x30	; 48
 516:	69 f4       	brne	.+26     	; 0x532 <vfprintf+0xba>
 518:	23 2d       	mov	r18, r3
 51a:	21 60       	ori	r18, 0x01	; 1
 51c:	16 c0       	rjmp	.+44     	; 0x54a <vfprintf+0xd2>
 51e:	83 2d       	mov	r24, r3
 520:	82 60       	ori	r24, 0x02	; 2
 522:	38 2e       	mov	r3, r24
 524:	e3 2d       	mov	r30, r3
 526:	e4 60       	ori	r30, 0x04	; 4
 528:	3e 2e       	mov	r3, r30
 52a:	2a c0       	rjmp	.+84     	; 0x580 <vfprintf+0x108>
 52c:	f3 2d       	mov	r31, r3
 52e:	f8 60       	ori	r31, 0x08	; 8
 530:	1d c0       	rjmp	.+58     	; 0x56c <vfprintf+0xf4>
 532:	37 fc       	sbrc	r3, 7
 534:	2d c0       	rjmp	.+90     	; 0x590 <vfprintf+0x118>
 536:	20 ed       	ldi	r18, 0xD0	; 208
 538:	28 0f       	add	r18, r24
 53a:	2a 30       	cpi	r18, 0x0A	; 10
 53c:	40 f0       	brcs	.+16     	; 0x54e <vfprintf+0xd6>
 53e:	8e 32       	cpi	r24, 0x2E	; 46
 540:	b9 f4       	brne	.+46     	; 0x570 <vfprintf+0xf8>
 542:	36 fc       	sbrc	r3, 6
 544:	81 c1       	rjmp	.+770    	; 0x848 <vfprintf+0x3d0>
 546:	23 2d       	mov	r18, r3
 548:	20 64       	ori	r18, 0x40	; 64
 54a:	32 2e       	mov	r3, r18
 54c:	19 c0       	rjmp	.+50     	; 0x580 <vfprintf+0x108>
 54e:	36 fe       	sbrs	r3, 6
 550:	06 c0       	rjmp	.+12     	; 0x55e <vfprintf+0xe6>
 552:	8a e0       	ldi	r24, 0x0A	; 10
 554:	98 9e       	mul	r9, r24
 556:	20 0d       	add	r18, r0
 558:	11 24       	eor	r1, r1
 55a:	92 2e       	mov	r9, r18
 55c:	11 c0       	rjmp	.+34     	; 0x580 <vfprintf+0x108>
 55e:	ea e0       	ldi	r30, 0x0A	; 10
 560:	2e 9e       	mul	r2, r30
 562:	20 0d       	add	r18, r0
 564:	11 24       	eor	r1, r1
 566:	22 2e       	mov	r2, r18
 568:	f3 2d       	mov	r31, r3
 56a:	f0 62       	ori	r31, 0x20	; 32
 56c:	3f 2e       	mov	r3, r31
 56e:	08 c0       	rjmp	.+16     	; 0x580 <vfprintf+0x108>
 570:	8c 36       	cpi	r24, 0x6C	; 108
 572:	21 f4       	brne	.+8      	; 0x57c <vfprintf+0x104>
 574:	83 2d       	mov	r24, r3
 576:	80 68       	ori	r24, 0x80	; 128
 578:	38 2e       	mov	r3, r24
 57a:	02 c0       	rjmp	.+4      	; 0x580 <vfprintf+0x108>
 57c:	88 36       	cpi	r24, 0x68	; 104
 57e:	41 f4       	brne	.+16     	; 0x590 <vfprintf+0x118>
 580:	f7 01       	movw	r30, r14
 582:	93 fd       	sbrc	r25, 3
 584:	85 91       	lpm	r24, Z+
 586:	93 ff       	sbrs	r25, 3
 588:	81 91       	ld	r24, Z+
 58a:	7f 01       	movw	r14, r30
 58c:	81 11       	cpse	r24, r1
 58e:	b3 cf       	rjmp	.-154    	; 0x4f6 <vfprintf+0x7e>
 590:	98 2f       	mov	r25, r24
 592:	9f 7d       	andi	r25, 0xDF	; 223
 594:	95 54       	subi	r25, 0x45	; 69
 596:	93 30       	cpi	r25, 0x03	; 3
 598:	28 f4       	brcc	.+10     	; 0x5a4 <vfprintf+0x12c>
 59a:	0c 5f       	subi	r16, 0xFC	; 252
 59c:	1f 4f       	sbci	r17, 0xFF	; 255
 59e:	9f e3       	ldi	r25, 0x3F	; 63
 5a0:	99 83       	std	Y+1, r25	; 0x01
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <vfprintf+0x146>
 5a4:	83 36       	cpi	r24, 0x63	; 99
 5a6:	31 f0       	breq	.+12     	; 0x5b4 <vfprintf+0x13c>
 5a8:	83 37       	cpi	r24, 0x73	; 115
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <vfprintf+0x150>
 5ac:	83 35       	cpi	r24, 0x53	; 83
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <vfprintf+0x13a>
 5b0:	59 c0       	rjmp	.+178    	; 0x664 <vfprintf+0x1ec>
 5b2:	21 c0       	rjmp	.+66     	; 0x5f6 <vfprintf+0x17e>
 5b4:	f8 01       	movw	r30, r16
 5b6:	80 81       	ld	r24, Z
 5b8:	89 83       	std	Y+1, r24	; 0x01
 5ba:	0e 5f       	subi	r16, 0xFE	; 254
 5bc:	1f 4f       	sbci	r17, 0xFF	; 255
 5be:	88 24       	eor	r8, r8
 5c0:	83 94       	inc	r8
 5c2:	91 2c       	mov	r9, r1
 5c4:	53 01       	movw	r10, r6
 5c6:	13 c0       	rjmp	.+38     	; 0x5ee <vfprintf+0x176>
 5c8:	28 01       	movw	r4, r16
 5ca:	f2 e0       	ldi	r31, 0x02	; 2
 5cc:	4f 0e       	add	r4, r31
 5ce:	51 1c       	adc	r5, r1
 5d0:	f8 01       	movw	r30, r16
 5d2:	a0 80       	ld	r10, Z
 5d4:	b1 80       	ldd	r11, Z+1	; 0x01
 5d6:	36 fe       	sbrs	r3, 6
 5d8:	03 c0       	rjmp	.+6      	; 0x5e0 <vfprintf+0x168>
 5da:	69 2d       	mov	r22, r9
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <vfprintf+0x16c>
 5e0:	6f ef       	ldi	r22, 0xFF	; 255
 5e2:	7f ef       	ldi	r23, 0xFF	; 255
 5e4:	c5 01       	movw	r24, r10
 5e6:	0e 94 4b 04 	call	0x896	; 0x896 <strnlen>
 5ea:	4c 01       	movw	r8, r24
 5ec:	82 01       	movw	r16, r4
 5ee:	f3 2d       	mov	r31, r3
 5f0:	ff 77       	andi	r31, 0x7F	; 127
 5f2:	3f 2e       	mov	r3, r31
 5f4:	16 c0       	rjmp	.+44     	; 0x622 <vfprintf+0x1aa>
 5f6:	28 01       	movw	r4, r16
 5f8:	22 e0       	ldi	r18, 0x02	; 2
 5fa:	42 0e       	add	r4, r18
 5fc:	51 1c       	adc	r5, r1
 5fe:	f8 01       	movw	r30, r16
 600:	a0 80       	ld	r10, Z
 602:	b1 80       	ldd	r11, Z+1	; 0x01
 604:	36 fe       	sbrs	r3, 6
 606:	03 c0       	rjmp	.+6      	; 0x60e <vfprintf+0x196>
 608:	69 2d       	mov	r22, r9
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	02 c0       	rjmp	.+4      	; 0x612 <vfprintf+0x19a>
 60e:	6f ef       	ldi	r22, 0xFF	; 255
 610:	7f ef       	ldi	r23, 0xFF	; 255
 612:	c5 01       	movw	r24, r10
 614:	0e 94 40 04 	call	0x880	; 0x880 <strnlen_P>
 618:	4c 01       	movw	r8, r24
 61a:	f3 2d       	mov	r31, r3
 61c:	f0 68       	ori	r31, 0x80	; 128
 61e:	3f 2e       	mov	r3, r31
 620:	82 01       	movw	r16, r4
 622:	33 fc       	sbrc	r3, 3
 624:	1b c0       	rjmp	.+54     	; 0x65c <vfprintf+0x1e4>
 626:	82 2d       	mov	r24, r2
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	88 16       	cp	r8, r24
 62c:	99 06       	cpc	r9, r25
 62e:	b0 f4       	brcc	.+44     	; 0x65c <vfprintf+0x1e4>
 630:	b6 01       	movw	r22, r12
 632:	80 e2       	ldi	r24, 0x20	; 32
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 63a:	2a 94       	dec	r2
 63c:	f4 cf       	rjmp	.-24     	; 0x626 <vfprintf+0x1ae>
 63e:	f5 01       	movw	r30, r10
 640:	37 fc       	sbrc	r3, 7
 642:	85 91       	lpm	r24, Z+
 644:	37 fe       	sbrs	r3, 7
 646:	81 91       	ld	r24, Z+
 648:	5f 01       	movw	r10, r30
 64a:	b6 01       	movw	r22, r12
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 652:	21 10       	cpse	r2, r1
 654:	2a 94       	dec	r2
 656:	21 e0       	ldi	r18, 0x01	; 1
 658:	82 1a       	sub	r8, r18
 65a:	91 08       	sbc	r9, r1
 65c:	81 14       	cp	r8, r1
 65e:	91 04       	cpc	r9, r1
 660:	71 f7       	brne	.-36     	; 0x63e <vfprintf+0x1c6>
 662:	e8 c0       	rjmp	.+464    	; 0x834 <vfprintf+0x3bc>
 664:	84 36       	cpi	r24, 0x64	; 100
 666:	11 f0       	breq	.+4      	; 0x66c <vfprintf+0x1f4>
 668:	89 36       	cpi	r24, 0x69	; 105
 66a:	41 f5       	brne	.+80     	; 0x6bc <vfprintf+0x244>
 66c:	f8 01       	movw	r30, r16
 66e:	37 fe       	sbrs	r3, 7
 670:	07 c0       	rjmp	.+14     	; 0x680 <vfprintf+0x208>
 672:	60 81       	ld	r22, Z
 674:	71 81       	ldd	r23, Z+1	; 0x01
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	93 81       	ldd	r25, Z+3	; 0x03
 67a:	0c 5f       	subi	r16, 0xFC	; 252
 67c:	1f 4f       	sbci	r17, 0xFF	; 255
 67e:	08 c0       	rjmp	.+16     	; 0x690 <vfprintf+0x218>
 680:	60 81       	ld	r22, Z
 682:	71 81       	ldd	r23, Z+1	; 0x01
 684:	07 2e       	mov	r0, r23
 686:	00 0c       	add	r0, r0
 688:	88 0b       	sbc	r24, r24
 68a:	99 0b       	sbc	r25, r25
 68c:	0e 5f       	subi	r16, 0xFE	; 254
 68e:	1f 4f       	sbci	r17, 0xFF	; 255
 690:	f3 2d       	mov	r31, r3
 692:	ff 76       	andi	r31, 0x6F	; 111
 694:	3f 2e       	mov	r3, r31
 696:	97 ff       	sbrs	r25, 7
 698:	09 c0       	rjmp	.+18     	; 0x6ac <vfprintf+0x234>
 69a:	90 95       	com	r25
 69c:	80 95       	com	r24
 69e:	70 95       	com	r23
 6a0:	61 95       	neg	r22
 6a2:	7f 4f       	sbci	r23, 0xFF	; 255
 6a4:	8f 4f       	sbci	r24, 0xFF	; 255
 6a6:	9f 4f       	sbci	r25, 0xFF	; 255
 6a8:	f0 68       	ori	r31, 0x80	; 128
 6aa:	3f 2e       	mov	r3, r31
 6ac:	2a e0       	ldi	r18, 0x0A	; 10
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	a3 01       	movw	r20, r6
 6b2:	0e 94 92 04 	call	0x924	; 0x924 <__ultoa_invert>
 6b6:	88 2e       	mov	r8, r24
 6b8:	86 18       	sub	r8, r6
 6ba:	45 c0       	rjmp	.+138    	; 0x746 <vfprintf+0x2ce>
 6bc:	85 37       	cpi	r24, 0x75	; 117
 6be:	31 f4       	brne	.+12     	; 0x6cc <vfprintf+0x254>
 6c0:	23 2d       	mov	r18, r3
 6c2:	2f 7e       	andi	r18, 0xEF	; 239
 6c4:	b2 2e       	mov	r11, r18
 6c6:	2a e0       	ldi	r18, 0x0A	; 10
 6c8:	30 e0       	ldi	r19, 0x00	; 0
 6ca:	25 c0       	rjmp	.+74     	; 0x716 <vfprintf+0x29e>
 6cc:	93 2d       	mov	r25, r3
 6ce:	99 7f       	andi	r25, 0xF9	; 249
 6d0:	b9 2e       	mov	r11, r25
 6d2:	8f 36       	cpi	r24, 0x6F	; 111
 6d4:	c1 f0       	breq	.+48     	; 0x706 <vfprintf+0x28e>
 6d6:	18 f4       	brcc	.+6      	; 0x6de <vfprintf+0x266>
 6d8:	88 35       	cpi	r24, 0x58	; 88
 6da:	79 f0       	breq	.+30     	; 0x6fa <vfprintf+0x282>
 6dc:	b5 c0       	rjmp	.+362    	; 0x848 <vfprintf+0x3d0>
 6de:	80 37       	cpi	r24, 0x70	; 112
 6e0:	19 f0       	breq	.+6      	; 0x6e8 <vfprintf+0x270>
 6e2:	88 37       	cpi	r24, 0x78	; 120
 6e4:	21 f0       	breq	.+8      	; 0x6ee <vfprintf+0x276>
 6e6:	b0 c0       	rjmp	.+352    	; 0x848 <vfprintf+0x3d0>
 6e8:	e9 2f       	mov	r30, r25
 6ea:	e0 61       	ori	r30, 0x10	; 16
 6ec:	be 2e       	mov	r11, r30
 6ee:	b4 fe       	sbrs	r11, 4
 6f0:	0d c0       	rjmp	.+26     	; 0x70c <vfprintf+0x294>
 6f2:	fb 2d       	mov	r31, r11
 6f4:	f4 60       	ori	r31, 0x04	; 4
 6f6:	bf 2e       	mov	r11, r31
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <vfprintf+0x294>
 6fa:	34 fe       	sbrs	r3, 4
 6fc:	0a c0       	rjmp	.+20     	; 0x712 <vfprintf+0x29a>
 6fe:	29 2f       	mov	r18, r25
 700:	26 60       	ori	r18, 0x06	; 6
 702:	b2 2e       	mov	r11, r18
 704:	06 c0       	rjmp	.+12     	; 0x712 <vfprintf+0x29a>
 706:	28 e0       	ldi	r18, 0x08	; 8
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	05 c0       	rjmp	.+10     	; 0x716 <vfprintf+0x29e>
 70c:	20 e1       	ldi	r18, 0x10	; 16
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	02 c0       	rjmp	.+4      	; 0x716 <vfprintf+0x29e>
 712:	20 e1       	ldi	r18, 0x10	; 16
 714:	32 e0       	ldi	r19, 0x02	; 2
 716:	f8 01       	movw	r30, r16
 718:	b7 fe       	sbrs	r11, 7
 71a:	07 c0       	rjmp	.+14     	; 0x72a <vfprintf+0x2b2>
 71c:	60 81       	ld	r22, Z
 71e:	71 81       	ldd	r23, Z+1	; 0x01
 720:	82 81       	ldd	r24, Z+2	; 0x02
 722:	93 81       	ldd	r25, Z+3	; 0x03
 724:	0c 5f       	subi	r16, 0xFC	; 252
 726:	1f 4f       	sbci	r17, 0xFF	; 255
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0x2be>
 72a:	60 81       	ld	r22, Z
 72c:	71 81       	ldd	r23, Z+1	; 0x01
 72e:	80 e0       	ldi	r24, 0x00	; 0
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	0e 5f       	subi	r16, 0xFE	; 254
 734:	1f 4f       	sbci	r17, 0xFF	; 255
 736:	a3 01       	movw	r20, r6
 738:	0e 94 92 04 	call	0x924	; 0x924 <__ultoa_invert>
 73c:	88 2e       	mov	r8, r24
 73e:	86 18       	sub	r8, r6
 740:	fb 2d       	mov	r31, r11
 742:	ff 77       	andi	r31, 0x7F	; 127
 744:	3f 2e       	mov	r3, r31
 746:	36 fe       	sbrs	r3, 6
 748:	0d c0       	rjmp	.+26     	; 0x764 <vfprintf+0x2ec>
 74a:	23 2d       	mov	r18, r3
 74c:	2e 7f       	andi	r18, 0xFE	; 254
 74e:	a2 2e       	mov	r10, r18
 750:	89 14       	cp	r8, r9
 752:	58 f4       	brcc	.+22     	; 0x76a <vfprintf+0x2f2>
 754:	34 fe       	sbrs	r3, 4
 756:	0b c0       	rjmp	.+22     	; 0x76e <vfprintf+0x2f6>
 758:	32 fc       	sbrc	r3, 2
 75a:	09 c0       	rjmp	.+18     	; 0x76e <vfprintf+0x2f6>
 75c:	83 2d       	mov	r24, r3
 75e:	8e 7e       	andi	r24, 0xEE	; 238
 760:	a8 2e       	mov	r10, r24
 762:	05 c0       	rjmp	.+10     	; 0x76e <vfprintf+0x2f6>
 764:	b8 2c       	mov	r11, r8
 766:	a3 2c       	mov	r10, r3
 768:	03 c0       	rjmp	.+6      	; 0x770 <vfprintf+0x2f8>
 76a:	b8 2c       	mov	r11, r8
 76c:	01 c0       	rjmp	.+2      	; 0x770 <vfprintf+0x2f8>
 76e:	b9 2c       	mov	r11, r9
 770:	a4 fe       	sbrs	r10, 4
 772:	0f c0       	rjmp	.+30     	; 0x792 <vfprintf+0x31a>
 774:	fe 01       	movw	r30, r28
 776:	e8 0d       	add	r30, r8
 778:	f1 1d       	adc	r31, r1
 77a:	80 81       	ld	r24, Z
 77c:	80 33       	cpi	r24, 0x30	; 48
 77e:	21 f4       	brne	.+8      	; 0x788 <vfprintf+0x310>
 780:	9a 2d       	mov	r25, r10
 782:	99 7e       	andi	r25, 0xE9	; 233
 784:	a9 2e       	mov	r10, r25
 786:	09 c0       	rjmp	.+18     	; 0x79a <vfprintf+0x322>
 788:	a2 fe       	sbrs	r10, 2
 78a:	06 c0       	rjmp	.+12     	; 0x798 <vfprintf+0x320>
 78c:	b3 94       	inc	r11
 78e:	b3 94       	inc	r11
 790:	04 c0       	rjmp	.+8      	; 0x79a <vfprintf+0x322>
 792:	8a 2d       	mov	r24, r10
 794:	86 78       	andi	r24, 0x86	; 134
 796:	09 f0       	breq	.+2      	; 0x79a <vfprintf+0x322>
 798:	b3 94       	inc	r11
 79a:	a3 fc       	sbrc	r10, 3
 79c:	11 c0       	rjmp	.+34     	; 0x7c0 <vfprintf+0x348>
 79e:	a0 fe       	sbrs	r10, 0
 7a0:	06 c0       	rjmp	.+12     	; 0x7ae <vfprintf+0x336>
 7a2:	b2 14       	cp	r11, r2
 7a4:	88 f4       	brcc	.+34     	; 0x7c8 <vfprintf+0x350>
 7a6:	28 0c       	add	r2, r8
 7a8:	92 2c       	mov	r9, r2
 7aa:	9b 18       	sub	r9, r11
 7ac:	0e c0       	rjmp	.+28     	; 0x7ca <vfprintf+0x352>
 7ae:	b2 14       	cp	r11, r2
 7b0:	60 f4       	brcc	.+24     	; 0x7ca <vfprintf+0x352>
 7b2:	b6 01       	movw	r22, r12
 7b4:	80 e2       	ldi	r24, 0x20	; 32
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 7bc:	b3 94       	inc	r11
 7be:	f7 cf       	rjmp	.-18     	; 0x7ae <vfprintf+0x336>
 7c0:	b2 14       	cp	r11, r2
 7c2:	18 f4       	brcc	.+6      	; 0x7ca <vfprintf+0x352>
 7c4:	2b 18       	sub	r2, r11
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0x354>
 7c8:	98 2c       	mov	r9, r8
 7ca:	21 2c       	mov	r2, r1
 7cc:	a4 fe       	sbrs	r10, 4
 7ce:	10 c0       	rjmp	.+32     	; 0x7f0 <vfprintf+0x378>
 7d0:	b6 01       	movw	r22, r12
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 7da:	a2 fe       	sbrs	r10, 2
 7dc:	17 c0       	rjmp	.+46     	; 0x80c <vfprintf+0x394>
 7de:	a1 fc       	sbrc	r10, 1
 7e0:	03 c0       	rjmp	.+6      	; 0x7e8 <vfprintf+0x370>
 7e2:	88 e7       	ldi	r24, 0x78	; 120
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	02 c0       	rjmp	.+4      	; 0x7ec <vfprintf+0x374>
 7e8:	88 e5       	ldi	r24, 0x58	; 88
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	b6 01       	movw	r22, r12
 7ee:	0c c0       	rjmp	.+24     	; 0x808 <vfprintf+0x390>
 7f0:	8a 2d       	mov	r24, r10
 7f2:	86 78       	andi	r24, 0x86	; 134
 7f4:	59 f0       	breq	.+22     	; 0x80c <vfprintf+0x394>
 7f6:	a1 fe       	sbrs	r10, 1
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <vfprintf+0x386>
 7fa:	8b e2       	ldi	r24, 0x2B	; 43
 7fc:	01 c0       	rjmp	.+2      	; 0x800 <vfprintf+0x388>
 7fe:	80 e2       	ldi	r24, 0x20	; 32
 800:	a7 fc       	sbrc	r10, 7
 802:	8d e2       	ldi	r24, 0x2D	; 45
 804:	b6 01       	movw	r22, r12
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 80c:	89 14       	cp	r8, r9
 80e:	38 f4       	brcc	.+14     	; 0x81e <vfprintf+0x3a6>
 810:	b6 01       	movw	r22, r12
 812:	80 e3       	ldi	r24, 0x30	; 48
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 81a:	9a 94       	dec	r9
 81c:	f7 cf       	rjmp	.-18     	; 0x80c <vfprintf+0x394>
 81e:	8a 94       	dec	r8
 820:	f3 01       	movw	r30, r6
 822:	e8 0d       	add	r30, r8
 824:	f1 1d       	adc	r31, r1
 826:	80 81       	ld	r24, Z
 828:	b6 01       	movw	r22, r12
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 830:	81 10       	cpse	r8, r1
 832:	f5 cf       	rjmp	.-22     	; 0x81e <vfprintf+0x3a6>
 834:	22 20       	and	r2, r2
 836:	09 f4       	brne	.+2      	; 0x83a <vfprintf+0x3c2>
 838:	42 ce       	rjmp	.-892    	; 0x4be <vfprintf+0x46>
 83a:	b6 01       	movw	r22, r12
 83c:	80 e2       	ldi	r24, 0x20	; 32
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	0e 94 56 04 	call	0x8ac	; 0x8ac <fputc>
 844:	2a 94       	dec	r2
 846:	f6 cf       	rjmp	.-20     	; 0x834 <vfprintf+0x3bc>
 848:	f6 01       	movw	r30, r12
 84a:	86 81       	ldd	r24, Z+6	; 0x06
 84c:	97 81       	ldd	r25, Z+7	; 0x07
 84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0x3dc>
 850:	8f ef       	ldi	r24, 0xFF	; 255
 852:	9f ef       	ldi	r25, 0xFF	; 255
 854:	2b 96       	adiw	r28, 0x0b	; 11
 856:	cd bf       	out	0x3d, r28	; 61
 858:	de bf       	out	0x3e, r29	; 62
 85a:	df 91       	pop	r29
 85c:	cf 91       	pop	r28
 85e:	1f 91       	pop	r17
 860:	0f 91       	pop	r16
 862:	ff 90       	pop	r15
 864:	ef 90       	pop	r14
 866:	df 90       	pop	r13
 868:	cf 90       	pop	r12
 86a:	bf 90       	pop	r11
 86c:	af 90       	pop	r10
 86e:	9f 90       	pop	r9
 870:	8f 90       	pop	r8
 872:	7f 90       	pop	r7
 874:	6f 90       	pop	r6
 876:	5f 90       	pop	r5
 878:	4f 90       	pop	r4
 87a:	3f 90       	pop	r3
 87c:	2f 90       	pop	r2
 87e:	08 95       	ret

00000880 <strnlen_P>:
 880:	fc 01       	movw	r30, r24
 882:	05 90       	lpm	r0, Z+
 884:	61 50       	subi	r22, 0x01	; 1
 886:	70 40       	sbci	r23, 0x00	; 0
 888:	01 10       	cpse	r0, r1
 88a:	d8 f7       	brcc	.-10     	; 0x882 <strnlen_P+0x2>
 88c:	80 95       	com	r24
 88e:	90 95       	com	r25
 890:	8e 0f       	add	r24, r30
 892:	9f 1f       	adc	r25, r31
 894:	08 95       	ret

00000896 <strnlen>:
 896:	fc 01       	movw	r30, r24
 898:	61 50       	subi	r22, 0x01	; 1
 89a:	70 40       	sbci	r23, 0x00	; 0
 89c:	01 90       	ld	r0, Z+
 89e:	01 10       	cpse	r0, r1
 8a0:	d8 f7       	brcc	.-10     	; 0x898 <strnlen+0x2>
 8a2:	80 95       	com	r24
 8a4:	90 95       	com	r25
 8a6:	8e 0f       	add	r24, r30
 8a8:	9f 1f       	adc	r25, r31
 8aa:	08 95       	ret

000008ac <fputc>:
 8ac:	0f 93       	push	r16
 8ae:	1f 93       	push	r17
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	fb 01       	movw	r30, r22
 8b6:	23 81       	ldd	r18, Z+3	; 0x03
 8b8:	21 fd       	sbrc	r18, 1
 8ba:	03 c0       	rjmp	.+6      	; 0x8c2 <fputc+0x16>
 8bc:	8f ef       	ldi	r24, 0xFF	; 255
 8be:	9f ef       	ldi	r25, 0xFF	; 255
 8c0:	2c c0       	rjmp	.+88     	; 0x91a <fputc+0x6e>
 8c2:	22 ff       	sbrs	r18, 2
 8c4:	16 c0       	rjmp	.+44     	; 0x8f2 <fputc+0x46>
 8c6:	46 81       	ldd	r20, Z+6	; 0x06
 8c8:	57 81       	ldd	r21, Z+7	; 0x07
 8ca:	24 81       	ldd	r18, Z+4	; 0x04
 8cc:	35 81       	ldd	r19, Z+5	; 0x05
 8ce:	42 17       	cp	r20, r18
 8d0:	53 07       	cpc	r21, r19
 8d2:	44 f4       	brge	.+16     	; 0x8e4 <fputc+0x38>
 8d4:	a0 81       	ld	r26, Z
 8d6:	b1 81       	ldd	r27, Z+1	; 0x01
 8d8:	9d 01       	movw	r18, r26
 8da:	2f 5f       	subi	r18, 0xFF	; 255
 8dc:	3f 4f       	sbci	r19, 0xFF	; 255
 8de:	20 83       	st	Z, r18
 8e0:	31 83       	std	Z+1, r19	; 0x01
 8e2:	8c 93       	st	X, r24
 8e4:	26 81       	ldd	r18, Z+6	; 0x06
 8e6:	37 81       	ldd	r19, Z+7	; 0x07
 8e8:	2f 5f       	subi	r18, 0xFF	; 255
 8ea:	3f 4f       	sbci	r19, 0xFF	; 255
 8ec:	26 83       	std	Z+6, r18	; 0x06
 8ee:	37 83       	std	Z+7, r19	; 0x07
 8f0:	14 c0       	rjmp	.+40     	; 0x91a <fputc+0x6e>
 8f2:	8b 01       	movw	r16, r22
 8f4:	ec 01       	movw	r28, r24
 8f6:	fb 01       	movw	r30, r22
 8f8:	00 84       	ldd	r0, Z+8	; 0x08
 8fa:	f1 85       	ldd	r31, Z+9	; 0x09
 8fc:	e0 2d       	mov	r30, r0
 8fe:	09 95       	icall
 900:	89 2b       	or	r24, r25
 902:	e1 f6       	brne	.-72     	; 0x8bc <fputc+0x10>
 904:	d8 01       	movw	r26, r16
 906:	16 96       	adiw	r26, 0x06	; 6
 908:	8d 91       	ld	r24, X+
 90a:	9c 91       	ld	r25, X
 90c:	17 97       	sbiw	r26, 0x07	; 7
 90e:	01 96       	adiw	r24, 0x01	; 1
 910:	16 96       	adiw	r26, 0x06	; 6
 912:	8d 93       	st	X+, r24
 914:	9c 93       	st	X, r25
 916:	17 97       	sbiw	r26, 0x07	; 7
 918:	ce 01       	movw	r24, r28
 91a:	df 91       	pop	r29
 91c:	cf 91       	pop	r28
 91e:	1f 91       	pop	r17
 920:	0f 91       	pop	r16
 922:	08 95       	ret

00000924 <__ultoa_invert>:
 924:	fa 01       	movw	r30, r20
 926:	aa 27       	eor	r26, r26
 928:	28 30       	cpi	r18, 0x08	; 8
 92a:	51 f1       	breq	.+84     	; 0x980 <__ultoa_invert+0x5c>
 92c:	20 31       	cpi	r18, 0x10	; 16
 92e:	81 f1       	breq	.+96     	; 0x990 <__ultoa_invert+0x6c>
 930:	e8 94       	clt
 932:	6f 93       	push	r22
 934:	6e 7f       	andi	r22, 0xFE	; 254
 936:	6e 5f       	subi	r22, 0xFE	; 254
 938:	7f 4f       	sbci	r23, 0xFF	; 255
 93a:	8f 4f       	sbci	r24, 0xFF	; 255
 93c:	9f 4f       	sbci	r25, 0xFF	; 255
 93e:	af 4f       	sbci	r26, 0xFF	; 255
 940:	b1 e0       	ldi	r27, 0x01	; 1
 942:	3e d0       	rcall	.+124    	; 0x9c0 <__ultoa_invert+0x9c>
 944:	b4 e0       	ldi	r27, 0x04	; 4
 946:	3c d0       	rcall	.+120    	; 0x9c0 <__ultoa_invert+0x9c>
 948:	67 0f       	add	r22, r23
 94a:	78 1f       	adc	r23, r24
 94c:	89 1f       	adc	r24, r25
 94e:	9a 1f       	adc	r25, r26
 950:	a1 1d       	adc	r26, r1
 952:	68 0f       	add	r22, r24
 954:	79 1f       	adc	r23, r25
 956:	8a 1f       	adc	r24, r26
 958:	91 1d       	adc	r25, r1
 95a:	a1 1d       	adc	r26, r1
 95c:	6a 0f       	add	r22, r26
 95e:	71 1d       	adc	r23, r1
 960:	81 1d       	adc	r24, r1
 962:	91 1d       	adc	r25, r1
 964:	a1 1d       	adc	r26, r1
 966:	20 d0       	rcall	.+64     	; 0x9a8 <__ultoa_invert+0x84>
 968:	09 f4       	brne	.+2      	; 0x96c <__ultoa_invert+0x48>
 96a:	68 94       	set
 96c:	3f 91       	pop	r19
 96e:	2a e0       	ldi	r18, 0x0A	; 10
 970:	26 9f       	mul	r18, r22
 972:	11 24       	eor	r1, r1
 974:	30 19       	sub	r19, r0
 976:	30 5d       	subi	r19, 0xD0	; 208
 978:	31 93       	st	Z+, r19
 97a:	de f6       	brtc	.-74     	; 0x932 <__ultoa_invert+0xe>
 97c:	cf 01       	movw	r24, r30
 97e:	08 95       	ret
 980:	46 2f       	mov	r20, r22
 982:	47 70       	andi	r20, 0x07	; 7
 984:	40 5d       	subi	r20, 0xD0	; 208
 986:	41 93       	st	Z+, r20
 988:	b3 e0       	ldi	r27, 0x03	; 3
 98a:	0f d0       	rcall	.+30     	; 0x9aa <__ultoa_invert+0x86>
 98c:	c9 f7       	brne	.-14     	; 0x980 <__ultoa_invert+0x5c>
 98e:	f6 cf       	rjmp	.-20     	; 0x97c <__ultoa_invert+0x58>
 990:	46 2f       	mov	r20, r22
 992:	4f 70       	andi	r20, 0x0F	; 15
 994:	40 5d       	subi	r20, 0xD0	; 208
 996:	4a 33       	cpi	r20, 0x3A	; 58
 998:	18 f0       	brcs	.+6      	; 0x9a0 <__ultoa_invert+0x7c>
 99a:	49 5d       	subi	r20, 0xD9	; 217
 99c:	31 fd       	sbrc	r19, 1
 99e:	40 52       	subi	r20, 0x20	; 32
 9a0:	41 93       	st	Z+, r20
 9a2:	02 d0       	rcall	.+4      	; 0x9a8 <__ultoa_invert+0x84>
 9a4:	a9 f7       	brne	.-22     	; 0x990 <__ultoa_invert+0x6c>
 9a6:	ea cf       	rjmp	.-44     	; 0x97c <__ultoa_invert+0x58>
 9a8:	b4 e0       	ldi	r27, 0x04	; 4
 9aa:	a6 95       	lsr	r26
 9ac:	97 95       	ror	r25
 9ae:	87 95       	ror	r24
 9b0:	77 95       	ror	r23
 9b2:	67 95       	ror	r22
 9b4:	ba 95       	dec	r27
 9b6:	c9 f7       	brne	.-14     	; 0x9aa <__ultoa_invert+0x86>
 9b8:	00 97       	sbiw	r24, 0x00	; 0
 9ba:	61 05       	cpc	r22, r1
 9bc:	71 05       	cpc	r23, r1
 9be:	08 95       	ret
 9c0:	9b 01       	movw	r18, r22
 9c2:	ac 01       	movw	r20, r24
 9c4:	0a 2e       	mov	r0, r26
 9c6:	06 94       	lsr	r0
 9c8:	57 95       	ror	r21
 9ca:	47 95       	ror	r20
 9cc:	37 95       	ror	r19
 9ce:	27 95       	ror	r18
 9d0:	ba 95       	dec	r27
 9d2:	c9 f7       	brne	.-14     	; 0x9c6 <__ultoa_invert+0xa2>
 9d4:	62 0f       	add	r22, r18
 9d6:	73 1f       	adc	r23, r19
 9d8:	84 1f       	adc	r24, r20
 9da:	95 1f       	adc	r25, r21
 9dc:	a0 1d       	adc	r26, r0
 9de:	08 95       	ret

000009e0 <_exit>:
 9e0:	f8 94       	cli

000009e2 <__stop_program>:
 9e2:	ff cf       	rjmp	.-2      	; 0x9e2 <__stop_program>
