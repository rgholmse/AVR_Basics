
Part 3 Solution ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00804000  000007c6  0000083a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000008e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003b72  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000323a  00000000  00000000  00004492  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a7  00000000  00000000  000076cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  00007b74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001dae  00000000  00000000  00007bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a0  00000000  00000000  000099a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00009b46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	df e7       	ldi	r29, 0x7F	; 127
  f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_copy_data>:
  f4:	10 e4       	ldi	r17, 0x40	; 64
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b0 e4       	ldi	r27, 0x40	; 64
  fa:	e6 ec       	ldi	r30, 0xC6	; 198
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 31       	cpi	r26, 0x12	; 18
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
 112:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <_exit>

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <_Z13cdc_send_charc>:


void cdc_send_char(char c)
{
    // Wait for USART1 to be ready for new data
    while (!(USART1.STATUS & USART_DREIF_bm));
 11a:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 11e:	95 ff       	sbrs	r25, 5
 120:	fc cf       	rjmp	.-8      	; 0x11a <_Z13cdc_send_charc>
    
    // Give new data to USART 1
    USART1.TXDATAL = c;
 122:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
 126:	08 95       	ret

00000128 <_Z15cdc_send_stringPKc>:
}
void cdc_send_string(const char* str)
{
 128:	1f 93       	push	r17
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
 12e:	ec 01       	movw	r28, r24
    for (uint8_t i=0; i < strlen(str); i++)
 130:	10 e0       	ldi	r17, 0x00	; 0
 132:	81 2f       	mov	r24, r17
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	fe 01       	movw	r30, r28
 138:	01 90       	ld	r0, Z+
 13a:	00 20       	and	r0, r0
 13c:	e9 f7       	brne	.-6      	; 0x138 <_Z15cdc_send_stringPKc+0x10>
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	ec 1b       	sub	r30, r28
 142:	fd 0b       	sbc	r31, r29
 144:	8e 17       	cp	r24, r30
 146:	9f 07       	cpc	r25, r31
 148:	40 f4       	brcc	.+16     	; 0x15a <_Z15cdc_send_stringPKc+0x32>
    {
        cdc_send_char(str[i]);
 14a:	fe 01       	movw	r30, r28
 14c:	e8 0f       	add	r30, r24
 14e:	f9 1f       	adc	r31, r25
 150:	80 81       	ld	r24, Z
 152:	0e 94 8d 00 	call	0x11a	; 0x11a <_Z13cdc_send_charc>
    // Give new data to USART 1
    USART1.TXDATAL = c;
}
void cdc_send_string(const char* str)
{
    for (uint8_t i=0; i < strlen(str); i++)
 156:	1f 5f       	subi	r17, 0xFF	; 255
 158:	ec cf       	rjmp	.-40     	; 0x132 <_Z15cdc_send_stringPKc+0xa>
    {
        cdc_send_char(str[i]);
    }
}
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	08 95       	ret

00000162 <_Z9cdc_printPKcz>:
void cdc_print(const char* text, ...)
{
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	cd b7       	in	r28, 0x3d	; 61
 168:	de b7       	in	r29, 0x3e	; 62
 16a:	c4 56       	subi	r28, 0x64	; 100
 16c:	d1 09       	sbc	r29, r1
 16e:	cd bf       	out	0x3d, r28	; 61
 170:	de bf       	out	0x3e, r29	; 62
 172:	ae 01       	movw	r20, r28
 174:	47 59       	subi	r20, 0x97	; 151
 176:	5f 4f       	sbci	r21, 0xFF	; 255
 178:	fa 01       	movw	r30, r20
 17a:	61 91       	ld	r22, Z+
 17c:	71 91       	ld	r23, Z+
 17e:	af 01       	movw	r20, r30
    va_list argptr;
    char buffer[100];
    
    va_start(argptr, text);
    vsprintf(buffer, text, argptr);
 180:	ce 01       	movw	r24, r28
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	0e 94 0a 01 	call	0x214	; 0x214 <vsprintf>
    
    cdc_send_string(buffer);
 188:	ce 01       	movw	r24, r28
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	0e 94 94 00 	call	0x128	; 0x128 <_Z15cdc_send_stringPKc>
    va_end(argptr);
}
 190:	cc 59       	subi	r28, 0x9C	; 156
 192:	df 4f       	sbci	r29, 0xFF	; 255
 194:	cd bf       	out	0x3d, r28	; 61
 196:	de bf       	out	0x3e, r29	; 62
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <main>:

int main(void) {
    // Enable USART1 transmitter
    USART1.CTRLB    = USART_TXEN_bm;
 19e:	e0 e2       	ldi	r30, 0x20	; 32
 1a0:	f8 e0       	ldi	r31, 0x08	; 8
 1a2:	80 e4       	ldi	r24, 0x40	; 64
 1a4:	86 83       	std	Z+6, r24	; 0x06
    
    // Configure the baud rate of USART1
    USART1.BAUD     = BAUD(9600);
 1a6:	83 e8       	ldi	r24, 0x83	; 131
 1a8:	96 e0       	ldi	r25, 0x06	; 6
 1aa:	80 87       	std	Z+8, r24	; 0x08
 1ac:	91 87       	std	Z+9, r25	; 0x09
	
	// Set the ADC reference to VDD
	VREF.ADC0REF	= VREF_REFSEL_VDD_gc;
 1ae:	85 e0       	ldi	r24, 0x05	; 5
 1b0:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
    
    // Make PC0 an output
    PORTC.DIRSET    = PIN0_bm;
 1b4:	e0 e4       	ldi	r30, 0x40	; 64
 1b6:	f4 e0       	ldi	r31, 0x04	; 4
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	81 83       	std	Z+1, r24	; 0x01
    
    // Make PC1 an input (optional as it is an input by default)
    PORTC.DIRCLR    = PIN1_bm;
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	92 83       	std	Z+2, r25	; 0x02
    
    // Make PD7 input (optional as it is an input by default)
    PORTD.DIRCLR    = PIN7_bm;
 1c0:	90 e8       	ldi	r25, 0x80	; 128
 1c2:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <__TEXT_REGION_LENGTH__+0x7e0462>
    
    // Connect ADC to PD7 (AIN7)
    ADC0.MUXPOS     = ADC_MUXPOS_AIN7_gc;
 1c6:	e0 e0       	ldi	r30, 0x00	; 0
 1c8:	f6 e0       	ldi	r31, 0x06	; 6
 1ca:	97 e0       	ldi	r25, 0x07	; 7
 1cc:	90 87       	std	Z+8, r25	; 0x08
    
    // Set the ADC clock divider (Max frequency for ADC is 2 MHz [F_CPU / DIV]) - (optional as DIV2 is default setting)
    ADC0.CTRLC      = ADC_PRESC_DIV2_gc;
 1ce:	12 82       	std	Z+2, r1	; 0x02
    
    // Enable ADC, default config = single ended, 12b mode
    ADC0.CTRLA      = ADC_ENABLE_bm;
 1d0:	80 83       	st	Z, r24
    uint16_t adc_result;	
    
    while (1) 
    {
        // Start ADC measurement
        ADC0.COMMAND = ADC_STCONV_bm;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
        
        // Wait for ADC measurement to be complete (blocking)
        while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 1d8:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
 1dc:	80 ff       	sbrs	r24, 0
 1de:	fc cf       	rjmp	.-8      	; 0x1d8 <main+0x3a>
        
        // Store ADC result in a variable
        adc_result = ADC0.RES;
 1e0:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 1e4:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
        
        // Print the ADC result
        cdc_print("ADC Result = %d\r\n", adc_result);
 1e8:	9f 93       	push	r25
 1ea:	8f 93       	push	r24
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	90 e4       	ldi	r25, 0x40	; 64
 1f0:	9f 93       	push	r25
 1f2:	8f 93       	push	r24
 1f4:	0e 94 b1 00 	call	0x162	; 0x162 <_Z9cdc_printPKcz>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f8:	2f e7       	ldi	r18, 0x7F	; 127
 1fa:	8a e1       	ldi	r24, 0x1A	; 26
 1fc:	96 e0       	ldi	r25, 0x06	; 6
 1fe:	21 50       	subi	r18, 0x01	; 1
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 40       	sbci	r25, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <main+0x60>
 206:	00 c0       	rjmp	.+0      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 208:	00 00       	nop
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	df cf       	rjmp	.-66     	; 0x1d2 <main+0x34>

00000214 <vsprintf>:
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	cd b7       	in	r28, 0x3d	; 61
 21e:	de b7       	in	r29, 0x3e	; 62
 220:	2e 97       	sbiw	r28, 0x0e	; 14
 222:	cd bf       	out	0x3d, r28	; 61
 224:	de bf       	out	0x3e, r29	; 62
 226:	8c 01       	movw	r16, r24
 228:	86 e0       	ldi	r24, 0x06	; 6
 22a:	8c 83       	std	Y+4, r24	; 0x04
 22c:	09 83       	std	Y+1, r16	; 0x01
 22e:	1a 83       	std	Y+2, r17	; 0x02
 230:	8f ef       	ldi	r24, 0xFF	; 255
 232:	9f e7       	ldi	r25, 0x7F	; 127
 234:	8d 83       	std	Y+5, r24	; 0x05
 236:	9e 83       	std	Y+6, r25	; 0x06
 238:	ce 01       	movw	r24, r28
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	0e 94 2d 01 	call	0x25a	; 0x25a <vfprintf>
 240:	ef 81       	ldd	r30, Y+7	; 0x07
 242:	f8 85       	ldd	r31, Y+8	; 0x08
 244:	e0 0f       	add	r30, r16
 246:	f1 1f       	adc	r31, r17
 248:	10 82       	st	Z, r1
 24a:	2e 96       	adiw	r28, 0x0e	; 14
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	de bf       	out	0x3e, r29	; 62
 250:	df 91       	pop	r29
 252:	cf 91       	pop	r28
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	08 95       	ret

0000025a <vfprintf>:
 25a:	2f 92       	push	r2
 25c:	3f 92       	push	r3
 25e:	4f 92       	push	r4
 260:	5f 92       	push	r5
 262:	6f 92       	push	r6
 264:	7f 92       	push	r7
 266:	8f 92       	push	r8
 268:	9f 92       	push	r9
 26a:	af 92       	push	r10
 26c:	bf 92       	push	r11
 26e:	cf 92       	push	r12
 270:	df 92       	push	r13
 272:	ef 92       	push	r14
 274:	ff 92       	push	r15
 276:	0f 93       	push	r16
 278:	1f 93       	push	r17
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	cd b7       	in	r28, 0x3d	; 61
 280:	de b7       	in	r29, 0x3e	; 62
 282:	2b 97       	sbiw	r28, 0x0b	; 11
 284:	cd bf       	out	0x3d, r28	; 61
 286:	de bf       	out	0x3e, r29	; 62
 288:	6c 01       	movw	r12, r24
 28a:	7b 01       	movw	r14, r22
 28c:	8a 01       	movw	r16, r20
 28e:	fc 01       	movw	r30, r24
 290:	16 82       	std	Z+6, r1	; 0x06
 292:	17 82       	std	Z+7, r1	; 0x07
 294:	83 81       	ldd	r24, Z+3	; 0x03
 296:	81 ff       	sbrs	r24, 1
 298:	cc c1       	rjmp	.+920    	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 29a:	ce 01       	movw	r24, r28
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	3c 01       	movw	r6, r24
 2a0:	f6 01       	movw	r30, r12
 2a2:	93 81       	ldd	r25, Z+3	; 0x03
 2a4:	f7 01       	movw	r30, r14
 2a6:	93 fd       	sbrc	r25, 3
 2a8:	85 91       	lpm	r24, Z+
 2aa:	93 ff       	sbrs	r25, 3
 2ac:	81 91       	ld	r24, Z+
 2ae:	7f 01       	movw	r14, r30
 2b0:	88 23       	and	r24, r24
 2b2:	09 f4       	brne	.+2      	; 0x2b6 <vfprintf+0x5c>
 2b4:	ba c1       	rjmp	.+884    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 2b6:	85 32       	cpi	r24, 0x25	; 37
 2b8:	39 f4       	brne	.+14     	; 0x2c8 <vfprintf+0x6e>
 2ba:	93 fd       	sbrc	r25, 3
 2bc:	85 91       	lpm	r24, Z+
 2be:	93 ff       	sbrs	r25, 3
 2c0:	81 91       	ld	r24, Z+
 2c2:	7f 01       	movw	r14, r30
 2c4:	85 32       	cpi	r24, 0x25	; 37
 2c6:	29 f4       	brne	.+10     	; 0x2d2 <vfprintf+0x78>
 2c8:	b6 01       	movw	r22, r12
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 2d0:	e7 cf       	rjmp	.-50     	; 0x2a0 <vfprintf+0x46>
 2d2:	91 2c       	mov	r9, r1
 2d4:	21 2c       	mov	r2, r1
 2d6:	31 2c       	mov	r3, r1
 2d8:	ff e1       	ldi	r31, 0x1F	; 31
 2da:	f3 15       	cp	r31, r3
 2dc:	d8 f0       	brcs	.+54     	; 0x314 <vfprintf+0xba>
 2de:	8b 32       	cpi	r24, 0x2B	; 43
 2e0:	79 f0       	breq	.+30     	; 0x300 <vfprintf+0xa6>
 2e2:	38 f4       	brcc	.+14     	; 0x2f2 <vfprintf+0x98>
 2e4:	80 32       	cpi	r24, 0x20	; 32
 2e6:	79 f0       	breq	.+30     	; 0x306 <vfprintf+0xac>
 2e8:	83 32       	cpi	r24, 0x23	; 35
 2ea:	a1 f4       	brne	.+40     	; 0x314 <vfprintf+0xba>
 2ec:	23 2d       	mov	r18, r3
 2ee:	20 61       	ori	r18, 0x10	; 16
 2f0:	1d c0       	rjmp	.+58     	; 0x32c <vfprintf+0xd2>
 2f2:	8d 32       	cpi	r24, 0x2D	; 45
 2f4:	61 f0       	breq	.+24     	; 0x30e <vfprintf+0xb4>
 2f6:	80 33       	cpi	r24, 0x30	; 48
 2f8:	69 f4       	brne	.+26     	; 0x314 <vfprintf+0xba>
 2fa:	23 2d       	mov	r18, r3
 2fc:	21 60       	ori	r18, 0x01	; 1
 2fe:	16 c0       	rjmp	.+44     	; 0x32c <vfprintf+0xd2>
 300:	83 2d       	mov	r24, r3
 302:	82 60       	ori	r24, 0x02	; 2
 304:	38 2e       	mov	r3, r24
 306:	e3 2d       	mov	r30, r3
 308:	e4 60       	ori	r30, 0x04	; 4
 30a:	3e 2e       	mov	r3, r30
 30c:	2a c0       	rjmp	.+84     	; 0x362 <vfprintf+0x108>
 30e:	f3 2d       	mov	r31, r3
 310:	f8 60       	ori	r31, 0x08	; 8
 312:	1d c0       	rjmp	.+58     	; 0x34e <vfprintf+0xf4>
 314:	37 fc       	sbrc	r3, 7
 316:	2d c0       	rjmp	.+90     	; 0x372 <vfprintf+0x118>
 318:	20 ed       	ldi	r18, 0xD0	; 208
 31a:	28 0f       	add	r18, r24
 31c:	2a 30       	cpi	r18, 0x0A	; 10
 31e:	40 f0       	brcs	.+16     	; 0x330 <vfprintf+0xd6>
 320:	8e 32       	cpi	r24, 0x2E	; 46
 322:	b9 f4       	brne	.+46     	; 0x352 <vfprintf+0xf8>
 324:	36 fc       	sbrc	r3, 6
 326:	81 c1       	rjmp	.+770    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 328:	23 2d       	mov	r18, r3
 32a:	20 64       	ori	r18, 0x40	; 64
 32c:	32 2e       	mov	r3, r18
 32e:	19 c0       	rjmp	.+50     	; 0x362 <vfprintf+0x108>
 330:	36 fe       	sbrs	r3, 6
 332:	06 c0       	rjmp	.+12     	; 0x340 <vfprintf+0xe6>
 334:	8a e0       	ldi	r24, 0x0A	; 10
 336:	98 9e       	mul	r9, r24
 338:	20 0d       	add	r18, r0
 33a:	11 24       	eor	r1, r1
 33c:	92 2e       	mov	r9, r18
 33e:	11 c0       	rjmp	.+34     	; 0x362 <vfprintf+0x108>
 340:	ea e0       	ldi	r30, 0x0A	; 10
 342:	2e 9e       	mul	r2, r30
 344:	20 0d       	add	r18, r0
 346:	11 24       	eor	r1, r1
 348:	22 2e       	mov	r2, r18
 34a:	f3 2d       	mov	r31, r3
 34c:	f0 62       	ori	r31, 0x20	; 32
 34e:	3f 2e       	mov	r3, r31
 350:	08 c0       	rjmp	.+16     	; 0x362 <vfprintf+0x108>
 352:	8c 36       	cpi	r24, 0x6C	; 108
 354:	21 f4       	brne	.+8      	; 0x35e <vfprintf+0x104>
 356:	83 2d       	mov	r24, r3
 358:	80 68       	ori	r24, 0x80	; 128
 35a:	38 2e       	mov	r3, r24
 35c:	02 c0       	rjmp	.+4      	; 0x362 <vfprintf+0x108>
 35e:	88 36       	cpi	r24, 0x68	; 104
 360:	41 f4       	brne	.+16     	; 0x372 <vfprintf+0x118>
 362:	f7 01       	movw	r30, r14
 364:	93 fd       	sbrc	r25, 3
 366:	85 91       	lpm	r24, Z+
 368:	93 ff       	sbrs	r25, 3
 36a:	81 91       	ld	r24, Z+
 36c:	7f 01       	movw	r14, r30
 36e:	81 11       	cpse	r24, r1
 370:	b3 cf       	rjmp	.-154    	; 0x2d8 <vfprintf+0x7e>
 372:	98 2f       	mov	r25, r24
 374:	9f 7d       	andi	r25, 0xDF	; 223
 376:	95 54       	subi	r25, 0x45	; 69
 378:	93 30       	cpi	r25, 0x03	; 3
 37a:	28 f4       	brcc	.+10     	; 0x386 <vfprintf+0x12c>
 37c:	0c 5f       	subi	r16, 0xFC	; 252
 37e:	1f 4f       	sbci	r17, 0xFF	; 255
 380:	9f e3       	ldi	r25, 0x3F	; 63
 382:	99 83       	std	Y+1, r25	; 0x01
 384:	0d c0       	rjmp	.+26     	; 0x3a0 <vfprintf+0x146>
 386:	83 36       	cpi	r24, 0x63	; 99
 388:	31 f0       	breq	.+12     	; 0x396 <vfprintf+0x13c>
 38a:	83 37       	cpi	r24, 0x73	; 115
 38c:	71 f0       	breq	.+28     	; 0x3aa <vfprintf+0x150>
 38e:	83 35       	cpi	r24, 0x53	; 83
 390:	09 f0       	breq	.+2      	; 0x394 <vfprintf+0x13a>
 392:	59 c0       	rjmp	.+178    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 394:	21 c0       	rjmp	.+66     	; 0x3d8 <vfprintf+0x17e>
 396:	f8 01       	movw	r30, r16
 398:	80 81       	ld	r24, Z
 39a:	89 83       	std	Y+1, r24	; 0x01
 39c:	0e 5f       	subi	r16, 0xFE	; 254
 39e:	1f 4f       	sbci	r17, 0xFF	; 255
 3a0:	88 24       	eor	r8, r8
 3a2:	83 94       	inc	r8
 3a4:	91 2c       	mov	r9, r1
 3a6:	53 01       	movw	r10, r6
 3a8:	13 c0       	rjmp	.+38     	; 0x3d0 <vfprintf+0x176>
 3aa:	28 01       	movw	r4, r16
 3ac:	f2 e0       	ldi	r31, 0x02	; 2
 3ae:	4f 0e       	add	r4, r31
 3b0:	51 1c       	adc	r5, r1
 3b2:	f8 01       	movw	r30, r16
 3b4:	a0 80       	ld	r10, Z
 3b6:	b1 80       	ldd	r11, Z+1	; 0x01
 3b8:	36 fe       	sbrs	r3, 6
 3ba:	03 c0       	rjmp	.+6      	; 0x3c2 <vfprintf+0x168>
 3bc:	69 2d       	mov	r22, r9
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <vfprintf+0x16c>
 3c2:	6f ef       	ldi	r22, 0xFF	; 255
 3c4:	7f ef       	ldi	r23, 0xFF	; 255
 3c6:	c5 01       	movw	r24, r10
 3c8:	0e 94 3c 03 	call	0x678	; 0x678 <strnlen>
 3cc:	4c 01       	movw	r8, r24
 3ce:	82 01       	movw	r16, r4
 3d0:	f3 2d       	mov	r31, r3
 3d2:	ff 77       	andi	r31, 0x7F	; 127
 3d4:	3f 2e       	mov	r3, r31
 3d6:	16 c0       	rjmp	.+44     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d8:	28 01       	movw	r4, r16
 3da:	22 e0       	ldi	r18, 0x02	; 2
 3dc:	42 0e       	add	r4, r18
 3de:	51 1c       	adc	r5, r1
 3e0:	f8 01       	movw	r30, r16
 3e2:	a0 80       	ld	r10, Z
 3e4:	b1 80       	ldd	r11, Z+1	; 0x01
 3e6:	36 fe       	sbrs	r3, 6
 3e8:	03 c0       	rjmp	.+6      	; 0x3f0 <vfprintf+0x196>
 3ea:	69 2d       	mov	r22, r9
 3ec:	70 e0       	ldi	r23, 0x00	; 0
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <vfprintf+0x19a>
 3f0:	6f ef       	ldi	r22, 0xFF	; 255
 3f2:	7f ef       	ldi	r23, 0xFF	; 255
 3f4:	c5 01       	movw	r24, r10
 3f6:	0e 94 31 03 	call	0x662	; 0x662 <strnlen_P>
 3fa:	4c 01       	movw	r8, r24
 3fc:	f3 2d       	mov	r31, r3
 3fe:	f0 68       	ori	r31, 0x80	; 128
 400:	3f 2e       	mov	r3, r31
 402:	82 01       	movw	r16, r4
 404:	33 fc       	sbrc	r3, 3
 406:	1b c0       	rjmp	.+54     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 408:	82 2d       	mov	r24, r2
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	88 16       	cp	r8, r24
 40e:	99 06       	cpc	r9, r25
 410:	b0 f4       	brcc	.+44     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 412:	b6 01       	movw	r22, r12
 414:	80 e2       	ldi	r24, 0x20	; 32
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 41c:	2a 94       	dec	r2
 41e:	f4 cf       	rjmp	.-24     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 420:	f5 01       	movw	r30, r10
 422:	37 fc       	sbrc	r3, 7
 424:	85 91       	lpm	r24, Z+
 426:	37 fe       	sbrs	r3, 7
 428:	81 91       	ld	r24, Z+
 42a:	5f 01       	movw	r10, r30
 42c:	b6 01       	movw	r22, r12
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 434:	21 10       	cpse	r2, r1
 436:	2a 94       	dec	r2
 438:	21 e0       	ldi	r18, 0x01	; 1
 43a:	82 1a       	sub	r8, r18
 43c:	91 08       	sbc	r9, r1
 43e:	81 14       	cp	r8, r1
 440:	91 04       	cpc	r9, r1
 442:	71 f7       	brne	.-36     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 444:	e8 c0       	rjmp	.+464    	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 446:	84 36       	cpi	r24, 0x64	; 100
 448:	11 f0       	breq	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	89 36       	cpi	r24, 0x69	; 105
 44c:	41 f5       	brne	.+80     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 44e:	f8 01       	movw	r30, r16
 450:	37 fe       	sbrs	r3, 7
 452:	07 c0       	rjmp	.+14     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 454:	60 81       	ld	r22, Z
 456:	71 81       	ldd	r23, Z+1	; 0x01
 458:	82 81       	ldd	r24, Z+2	; 0x02
 45a:	93 81       	ldd	r25, Z+3	; 0x03
 45c:	0c 5f       	subi	r16, 0xFC	; 252
 45e:	1f 4f       	sbci	r17, 0xFF	; 255
 460:	08 c0       	rjmp	.+16     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 462:	60 81       	ld	r22, Z
 464:	71 81       	ldd	r23, Z+1	; 0x01
 466:	07 2e       	mov	r0, r23
 468:	00 0c       	add	r0, r0
 46a:	88 0b       	sbc	r24, r24
 46c:	99 0b       	sbc	r25, r25
 46e:	0e 5f       	subi	r16, 0xFE	; 254
 470:	1f 4f       	sbci	r17, 0xFF	; 255
 472:	f3 2d       	mov	r31, r3
 474:	ff 76       	andi	r31, 0x6F	; 111
 476:	3f 2e       	mov	r3, r31
 478:	97 ff       	sbrs	r25, 7
 47a:	09 c0       	rjmp	.+18     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 47c:	90 95       	com	r25
 47e:	80 95       	com	r24
 480:	70 95       	com	r23
 482:	61 95       	neg	r22
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	8f 4f       	sbci	r24, 0xFF	; 255
 488:	9f 4f       	sbci	r25, 0xFF	; 255
 48a:	f0 68       	ori	r31, 0x80	; 128
 48c:	3f 2e       	mov	r3, r31
 48e:	2a e0       	ldi	r18, 0x0A	; 10
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	a3 01       	movw	r20, r6
 494:	0e 94 83 03 	call	0x706	; 0x706 <__ultoa_invert>
 498:	88 2e       	mov	r8, r24
 49a:	86 18       	sub	r8, r6
 49c:	45 c0       	rjmp	.+138    	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 49e:	85 37       	cpi	r24, 0x75	; 117
 4a0:	31 f4       	brne	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a2:	23 2d       	mov	r18, r3
 4a4:	2f 7e       	andi	r18, 0xEF	; 239
 4a6:	b2 2e       	mov	r11, r18
 4a8:	2a e0       	ldi	r18, 0x0A	; 10
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	25 c0       	rjmp	.+74     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ae:	93 2d       	mov	r25, r3
 4b0:	99 7f       	andi	r25, 0xF9	; 249
 4b2:	b9 2e       	mov	r11, r25
 4b4:	8f 36       	cpi	r24, 0x6F	; 111
 4b6:	c1 f0       	breq	.+48     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4b8:	18 f4       	brcc	.+6      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4ba:	88 35       	cpi	r24, 0x58	; 88
 4bc:	79 f0       	breq	.+30     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4be:	b5 c0       	rjmp	.+362    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 4c0:	80 37       	cpi	r24, 0x70	; 112
 4c2:	19 f0       	breq	.+6      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c4:	88 37       	cpi	r24, 0x78	; 120
 4c6:	21 f0       	breq	.+8      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c8:	b0 c0       	rjmp	.+352    	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 4ca:	e9 2f       	mov	r30, r25
 4cc:	e0 61       	ori	r30, 0x10	; 16
 4ce:	be 2e       	mov	r11, r30
 4d0:	b4 fe       	sbrs	r11, 4
 4d2:	0d c0       	rjmp	.+26     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4d4:	fb 2d       	mov	r31, r11
 4d6:	f4 60       	ori	r31, 0x04	; 4
 4d8:	bf 2e       	mov	r11, r31
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4dc:	34 fe       	sbrs	r3, 4
 4de:	0a c0       	rjmp	.+20     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e0:	29 2f       	mov	r18, r25
 4e2:	26 60       	ori	r18, 0x06	; 6
 4e4:	b2 2e       	mov	r11, r18
 4e6:	06 c0       	rjmp	.+12     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e8:	28 e0       	ldi	r18, 0x08	; 8
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	05 c0       	rjmp	.+10     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ee:	20 e1       	ldi	r18, 0x10	; 16
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f4:	20 e1       	ldi	r18, 0x10	; 16
 4f6:	32 e0       	ldi	r19, 0x02	; 2
 4f8:	f8 01       	movw	r30, r16
 4fa:	b7 fe       	sbrs	r11, 7
 4fc:	07 c0       	rjmp	.+14     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4fe:	60 81       	ld	r22, Z
 500:	71 81       	ldd	r23, Z+1	; 0x01
 502:	82 81       	ldd	r24, Z+2	; 0x02
 504:	93 81       	ldd	r25, Z+3	; 0x03
 506:	0c 5f       	subi	r16, 0xFC	; 252
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	06 c0       	rjmp	.+12     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 50c:	60 81       	ld	r22, Z
 50e:	71 81       	ldd	r23, Z+1	; 0x01
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 5f       	subi	r16, 0xFE	; 254
 516:	1f 4f       	sbci	r17, 0xFF	; 255
 518:	a3 01       	movw	r20, r6
 51a:	0e 94 83 03 	call	0x706	; 0x706 <__ultoa_invert>
 51e:	88 2e       	mov	r8, r24
 520:	86 18       	sub	r8, r6
 522:	fb 2d       	mov	r31, r11
 524:	ff 77       	andi	r31, 0x7F	; 127
 526:	3f 2e       	mov	r3, r31
 528:	36 fe       	sbrs	r3, 6
 52a:	0d c0       	rjmp	.+26     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 52c:	23 2d       	mov	r18, r3
 52e:	2e 7f       	andi	r18, 0xFE	; 254
 530:	a2 2e       	mov	r10, r18
 532:	89 14       	cp	r8, r9
 534:	58 f4       	brcc	.+22     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 536:	34 fe       	sbrs	r3, 4
 538:	0b c0       	rjmp	.+22     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 53a:	32 fc       	sbrc	r3, 2
 53c:	09 c0       	rjmp	.+18     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 53e:	83 2d       	mov	r24, r3
 540:	8e 7e       	andi	r24, 0xEE	; 238
 542:	a8 2e       	mov	r10, r24
 544:	05 c0       	rjmp	.+10     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 546:	b8 2c       	mov	r11, r8
 548:	a3 2c       	mov	r10, r3
 54a:	03 c0       	rjmp	.+6      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54c:	b8 2c       	mov	r11, r8
 54e:	01 c0       	rjmp	.+2      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 550:	b9 2c       	mov	r11, r9
 552:	a4 fe       	sbrs	r10, 4
 554:	0f c0       	rjmp	.+30     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 556:	fe 01       	movw	r30, r28
 558:	e8 0d       	add	r30, r8
 55a:	f1 1d       	adc	r31, r1
 55c:	80 81       	ld	r24, Z
 55e:	80 33       	cpi	r24, 0x30	; 48
 560:	21 f4       	brne	.+8      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 562:	9a 2d       	mov	r25, r10
 564:	99 7e       	andi	r25, 0xE9	; 233
 566:	a9 2e       	mov	r10, r25
 568:	09 c0       	rjmp	.+18     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 56a:	a2 fe       	sbrs	r10, 2
 56c:	06 c0       	rjmp	.+12     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 56e:	b3 94       	inc	r11
 570:	b3 94       	inc	r11
 572:	04 c0       	rjmp	.+8      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 574:	8a 2d       	mov	r24, r10
 576:	86 78       	andi	r24, 0x86	; 134
 578:	09 f0       	breq	.+2      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 57a:	b3 94       	inc	r11
 57c:	a3 fc       	sbrc	r10, 3
 57e:	11 c0       	rjmp	.+34     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 580:	a0 fe       	sbrs	r10, 0
 582:	06 c0       	rjmp	.+12     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 584:	b2 14       	cp	r11, r2
 586:	88 f4       	brcc	.+34     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 588:	28 0c       	add	r2, r8
 58a:	92 2c       	mov	r9, r2
 58c:	9b 18       	sub	r9, r11
 58e:	0e c0       	rjmp	.+28     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 590:	b2 14       	cp	r11, r2
 592:	60 f4       	brcc	.+24     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 594:	b6 01       	movw	r22, r12
 596:	80 e2       	ldi	r24, 0x20	; 32
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 59e:	b3 94       	inc	r11
 5a0:	f7 cf       	rjmp	.-18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 5a2:	b2 14       	cp	r11, r2
 5a4:	18 f4       	brcc	.+6      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a6:	2b 18       	sub	r2, r11
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5aa:	98 2c       	mov	r9, r8
 5ac:	21 2c       	mov	r2, r1
 5ae:	a4 fe       	sbrs	r10, 4
 5b0:	10 c0       	rjmp	.+32     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5b2:	b6 01       	movw	r22, r12
 5b4:	80 e3       	ldi	r24, 0x30	; 48
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 5bc:	a2 fe       	sbrs	r10, 2
 5be:	17 c0       	rjmp	.+46     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5c0:	a1 fc       	sbrc	r10, 1
 5c2:	03 c0       	rjmp	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	88 e7       	ldi	r24, 0x78	; 120
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	88 e5       	ldi	r24, 0x58	; 88
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	b6 01       	movw	r22, r12
 5d0:	0c c0       	rjmp	.+24     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5d2:	8a 2d       	mov	r24, r10
 5d4:	86 78       	andi	r24, 0x86	; 134
 5d6:	59 f0       	breq	.+22     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d8:	a1 fe       	sbrs	r10, 1
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5dc:	8b e2       	ldi	r24, 0x2B	; 43
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5e0:	80 e2       	ldi	r24, 0x20	; 32
 5e2:	a7 fc       	sbrc	r10, 7
 5e4:	8d e2       	ldi	r24, 0x2D	; 45
 5e6:	b6 01       	movw	r22, r12
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 5ee:	89 14       	cp	r8, r9
 5f0:	38 f4       	brcc	.+14     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5f2:	b6 01       	movw	r22, r12
 5f4:	80 e3       	ldi	r24, 0x30	; 48
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 5fc:	9a 94       	dec	r9
 5fe:	f7 cf       	rjmp	.-18     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 600:	8a 94       	dec	r8
 602:	f3 01       	movw	r30, r6
 604:	e8 0d       	add	r30, r8
 606:	f1 1d       	adc	r31, r1
 608:	80 81       	ld	r24, Z
 60a:	b6 01       	movw	r22, r12
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 612:	81 10       	cpse	r8, r1
 614:	f5 cf       	rjmp	.-22     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 616:	22 20       	and	r2, r2
 618:	09 f4       	brne	.+2      	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 61a:	42 ce       	rjmp	.-892    	; 0x2a0 <vfprintf+0x46>
 61c:	b6 01       	movw	r22, r12
 61e:	80 e2       	ldi	r24, 0x20	; 32
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 47 03 	call	0x68e	; 0x68e <fputc>
 626:	2a 94       	dec	r2
 628:	f6 cf       	rjmp	.-20     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 62a:	f6 01       	movw	r30, r12
 62c:	86 81       	ldd	r24, Z+6	; 0x06
 62e:	97 81       	ldd	r25, Z+7	; 0x07
 630:	02 c0       	rjmp	.+4      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	9f ef       	ldi	r25, 0xFF	; 255
 636:	2b 96       	adiw	r28, 0x0b	; 11
 638:	cd bf       	out	0x3d, r28	; 61
 63a:	de bf       	out	0x3e, r29	; 62
 63c:	df 91       	pop	r29
 63e:	cf 91       	pop	r28
 640:	1f 91       	pop	r17
 642:	0f 91       	pop	r16
 644:	ff 90       	pop	r15
 646:	ef 90       	pop	r14
 648:	df 90       	pop	r13
 64a:	cf 90       	pop	r12
 64c:	bf 90       	pop	r11
 64e:	af 90       	pop	r10
 650:	9f 90       	pop	r9
 652:	8f 90       	pop	r8
 654:	7f 90       	pop	r7
 656:	6f 90       	pop	r6
 658:	5f 90       	pop	r5
 65a:	4f 90       	pop	r4
 65c:	3f 90       	pop	r3
 65e:	2f 90       	pop	r2
 660:	08 95       	ret

00000662 <strnlen_P>:
 662:	fc 01       	movw	r30, r24
 664:	05 90       	lpm	r0, Z+
 666:	61 50       	subi	r22, 0x01	; 1
 668:	70 40       	sbci	r23, 0x00	; 0
 66a:	01 10       	cpse	r0, r1
 66c:	d8 f7       	brcc	.-10     	; 0x664 <strnlen_P+0x2>
 66e:	80 95       	com	r24
 670:	90 95       	com	r25
 672:	8e 0f       	add	r24, r30
 674:	9f 1f       	adc	r25, r31
 676:	08 95       	ret

00000678 <strnlen>:
 678:	fc 01       	movw	r30, r24
 67a:	61 50       	subi	r22, 0x01	; 1
 67c:	70 40       	sbci	r23, 0x00	; 0
 67e:	01 90       	ld	r0, Z+
 680:	01 10       	cpse	r0, r1
 682:	d8 f7       	brcc	.-10     	; 0x67a <strnlen+0x2>
 684:	80 95       	com	r24
 686:	90 95       	com	r25
 688:	8e 0f       	add	r24, r30
 68a:	9f 1f       	adc	r25, r31
 68c:	08 95       	ret

0000068e <fputc>:
 68e:	0f 93       	push	r16
 690:	1f 93       	push	r17
 692:	cf 93       	push	r28
 694:	df 93       	push	r29
 696:	fb 01       	movw	r30, r22
 698:	23 81       	ldd	r18, Z+3	; 0x03
 69a:	21 fd       	sbrc	r18, 1
 69c:	03 c0       	rjmp	.+6      	; 0x6a4 <fputc+0x16>
 69e:	8f ef       	ldi	r24, 0xFF	; 255
 6a0:	9f ef       	ldi	r25, 0xFF	; 255
 6a2:	2c c0       	rjmp	.+88     	; 0x6fc <fputc+0x6e>
 6a4:	22 ff       	sbrs	r18, 2
 6a6:	16 c0       	rjmp	.+44     	; 0x6d4 <fputc+0x46>
 6a8:	46 81       	ldd	r20, Z+6	; 0x06
 6aa:	57 81       	ldd	r21, Z+7	; 0x07
 6ac:	24 81       	ldd	r18, Z+4	; 0x04
 6ae:	35 81       	ldd	r19, Z+5	; 0x05
 6b0:	42 17       	cp	r20, r18
 6b2:	53 07       	cpc	r21, r19
 6b4:	44 f4       	brge	.+16     	; 0x6c6 <fputc+0x38>
 6b6:	a0 81       	ld	r26, Z
 6b8:	b1 81       	ldd	r27, Z+1	; 0x01
 6ba:	9d 01       	movw	r18, r26
 6bc:	2f 5f       	subi	r18, 0xFF	; 255
 6be:	3f 4f       	sbci	r19, 0xFF	; 255
 6c0:	20 83       	st	Z, r18
 6c2:	31 83       	std	Z+1, r19	; 0x01
 6c4:	8c 93       	st	X, r24
 6c6:	26 81       	ldd	r18, Z+6	; 0x06
 6c8:	37 81       	ldd	r19, Z+7	; 0x07
 6ca:	2f 5f       	subi	r18, 0xFF	; 255
 6cc:	3f 4f       	sbci	r19, 0xFF	; 255
 6ce:	26 83       	std	Z+6, r18	; 0x06
 6d0:	37 83       	std	Z+7, r19	; 0x07
 6d2:	14 c0       	rjmp	.+40     	; 0x6fc <fputc+0x6e>
 6d4:	8b 01       	movw	r16, r22
 6d6:	ec 01       	movw	r28, r24
 6d8:	fb 01       	movw	r30, r22
 6da:	00 84       	ldd	r0, Z+8	; 0x08
 6dc:	f1 85       	ldd	r31, Z+9	; 0x09
 6de:	e0 2d       	mov	r30, r0
 6e0:	09 95       	icall
 6e2:	89 2b       	or	r24, r25
 6e4:	e1 f6       	brne	.-72     	; 0x69e <fputc+0x10>
 6e6:	d8 01       	movw	r26, r16
 6e8:	16 96       	adiw	r26, 0x06	; 6
 6ea:	8d 91       	ld	r24, X+
 6ec:	9c 91       	ld	r25, X
 6ee:	17 97       	sbiw	r26, 0x07	; 7
 6f0:	01 96       	adiw	r24, 0x01	; 1
 6f2:	16 96       	adiw	r26, 0x06	; 6
 6f4:	8d 93       	st	X+, r24
 6f6:	9c 93       	st	X, r25
 6f8:	17 97       	sbiw	r26, 0x07	; 7
 6fa:	ce 01       	movw	r24, r28
 6fc:	df 91       	pop	r29
 6fe:	cf 91       	pop	r28
 700:	1f 91       	pop	r17
 702:	0f 91       	pop	r16
 704:	08 95       	ret

00000706 <__ultoa_invert>:
 706:	fa 01       	movw	r30, r20
 708:	aa 27       	eor	r26, r26
 70a:	28 30       	cpi	r18, 0x08	; 8
 70c:	51 f1       	breq	.+84     	; 0x762 <__ultoa_invert+0x5c>
 70e:	20 31       	cpi	r18, 0x10	; 16
 710:	81 f1       	breq	.+96     	; 0x772 <__ultoa_invert+0x6c>
 712:	e8 94       	clt
 714:	6f 93       	push	r22
 716:	6e 7f       	andi	r22, 0xFE	; 254
 718:	6e 5f       	subi	r22, 0xFE	; 254
 71a:	7f 4f       	sbci	r23, 0xFF	; 255
 71c:	8f 4f       	sbci	r24, 0xFF	; 255
 71e:	9f 4f       	sbci	r25, 0xFF	; 255
 720:	af 4f       	sbci	r26, 0xFF	; 255
 722:	b1 e0       	ldi	r27, 0x01	; 1
 724:	3e d0       	rcall	.+124    	; 0x7a2 <__ultoa_invert+0x9c>
 726:	b4 e0       	ldi	r27, 0x04	; 4
 728:	3c d0       	rcall	.+120    	; 0x7a2 <__ultoa_invert+0x9c>
 72a:	67 0f       	add	r22, r23
 72c:	78 1f       	adc	r23, r24
 72e:	89 1f       	adc	r24, r25
 730:	9a 1f       	adc	r25, r26
 732:	a1 1d       	adc	r26, r1
 734:	68 0f       	add	r22, r24
 736:	79 1f       	adc	r23, r25
 738:	8a 1f       	adc	r24, r26
 73a:	91 1d       	adc	r25, r1
 73c:	a1 1d       	adc	r26, r1
 73e:	6a 0f       	add	r22, r26
 740:	71 1d       	adc	r23, r1
 742:	81 1d       	adc	r24, r1
 744:	91 1d       	adc	r25, r1
 746:	a1 1d       	adc	r26, r1
 748:	20 d0       	rcall	.+64     	; 0x78a <__ultoa_invert+0x84>
 74a:	09 f4       	brne	.+2      	; 0x74e <__ultoa_invert+0x48>
 74c:	68 94       	set
 74e:	3f 91       	pop	r19
 750:	2a e0       	ldi	r18, 0x0A	; 10
 752:	26 9f       	mul	r18, r22
 754:	11 24       	eor	r1, r1
 756:	30 19       	sub	r19, r0
 758:	30 5d       	subi	r19, 0xD0	; 208
 75a:	31 93       	st	Z+, r19
 75c:	de f6       	brtc	.-74     	; 0x714 <__ultoa_invert+0xe>
 75e:	cf 01       	movw	r24, r30
 760:	08 95       	ret
 762:	46 2f       	mov	r20, r22
 764:	47 70       	andi	r20, 0x07	; 7
 766:	40 5d       	subi	r20, 0xD0	; 208
 768:	41 93       	st	Z+, r20
 76a:	b3 e0       	ldi	r27, 0x03	; 3
 76c:	0f d0       	rcall	.+30     	; 0x78c <__ultoa_invert+0x86>
 76e:	c9 f7       	brne	.-14     	; 0x762 <__ultoa_invert+0x5c>
 770:	f6 cf       	rjmp	.-20     	; 0x75e <__ultoa_invert+0x58>
 772:	46 2f       	mov	r20, r22
 774:	4f 70       	andi	r20, 0x0F	; 15
 776:	40 5d       	subi	r20, 0xD0	; 208
 778:	4a 33       	cpi	r20, 0x3A	; 58
 77a:	18 f0       	brcs	.+6      	; 0x782 <__ultoa_invert+0x7c>
 77c:	49 5d       	subi	r20, 0xD9	; 217
 77e:	31 fd       	sbrc	r19, 1
 780:	40 52       	subi	r20, 0x20	; 32
 782:	41 93       	st	Z+, r20
 784:	02 d0       	rcall	.+4      	; 0x78a <__ultoa_invert+0x84>
 786:	a9 f7       	brne	.-22     	; 0x772 <__ultoa_invert+0x6c>
 788:	ea cf       	rjmp	.-44     	; 0x75e <__ultoa_invert+0x58>
 78a:	b4 e0       	ldi	r27, 0x04	; 4
 78c:	a6 95       	lsr	r26
 78e:	97 95       	ror	r25
 790:	87 95       	ror	r24
 792:	77 95       	ror	r23
 794:	67 95       	ror	r22
 796:	ba 95       	dec	r27
 798:	c9 f7       	brne	.-14     	; 0x78c <__ultoa_invert+0x86>
 79a:	00 97       	sbiw	r24, 0x00	; 0
 79c:	61 05       	cpc	r22, r1
 79e:	71 05       	cpc	r23, r1
 7a0:	08 95       	ret
 7a2:	9b 01       	movw	r18, r22
 7a4:	ac 01       	movw	r20, r24
 7a6:	0a 2e       	mov	r0, r26
 7a8:	06 94       	lsr	r0
 7aa:	57 95       	ror	r21
 7ac:	47 95       	ror	r20
 7ae:	37 95       	ror	r19
 7b0:	27 95       	ror	r18
 7b2:	ba 95       	dec	r27
 7b4:	c9 f7       	brne	.-14     	; 0x7a8 <__ultoa_invert+0xa2>
 7b6:	62 0f       	add	r22, r18
 7b8:	73 1f       	adc	r23, r19
 7ba:	84 1f       	adc	r24, r20
 7bc:	95 1f       	adc	r25, r21
 7be:	a0 1d       	adc	r26, r0
 7c0:	08 95       	ret

000007c2 <_exit>:
 7c2:	f8 94       	cli

000007c4 <__stop_program>:
 7c4:	ff cf       	rjmp	.-2      	; 0x7c4 <__stop_program>
