
Part 3 Solution UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00804000  000007c0  00000834  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007c0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000846  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000008e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003acd  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000323a  00000000  00000000  000043e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004a1  00000000  00000000  00007623  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  00007ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001cfa  00000000  00000000  00007b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a0  00000000  00000000  00009842  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000099e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  54:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  58:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  5c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	df e7       	ldi	r29, 0x7F	; 127
  f2:	de bf       	out	0x3e, r29	; 62

000000f4 <__do_copy_data>:
  f4:	10 e4       	ldi	r17, 0x40	; 64
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b0 e4       	ldi	r27, 0x40	; 64
  fa:	e0 ec       	ldi	r30, 0xC0	; 192
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 31       	cpi	r26, 0x12	; 18
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
 112:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <_exit>

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <_Z13cdc_send_charc>:


void cdc_send_char(char c)
{
    // Wait for USART1 to be ready for new data
    while (!(USART1.STATUS & USART_DREIF_bm));
 11a:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 11e:	95 ff       	sbrs	r25, 5
 120:	fc cf       	rjmp	.-8      	; 0x11a <_Z13cdc_send_charc>
    
    // Give new data to USART 1
    USART1.TXDATAL = c;
 122:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
 126:	08 95       	ret

00000128 <_Z15cdc_send_stringPKc>:
}
void cdc_send_string(const char* str)
{
 128:	1f 93       	push	r17
 12a:	cf 93       	push	r28
 12c:	df 93       	push	r29
 12e:	ec 01       	movw	r28, r24
    for (uint8_t i=0; i < strlen(str); i++)
 130:	10 e0       	ldi	r17, 0x00	; 0
 132:	81 2f       	mov	r24, r17
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	fe 01       	movw	r30, r28
 138:	01 90       	ld	r0, Z+
 13a:	00 20       	and	r0, r0
 13c:	e9 f7       	brne	.-6      	; 0x138 <_Z15cdc_send_stringPKc+0x10>
 13e:	31 97       	sbiw	r30, 0x01	; 1
 140:	ec 1b       	sub	r30, r28
 142:	fd 0b       	sbc	r31, r29
 144:	8e 17       	cp	r24, r30
 146:	9f 07       	cpc	r25, r31
 148:	40 f4       	brcc	.+16     	; 0x15a <_Z15cdc_send_stringPKc+0x32>
    {
        cdc_send_char(str[i]);
 14a:	fe 01       	movw	r30, r28
 14c:	e8 0f       	add	r30, r24
 14e:	f9 1f       	adc	r31, r25
 150:	80 81       	ld	r24, Z
 152:	0e 94 8d 00 	call	0x11a	; 0x11a <_Z13cdc_send_charc>
    // Give new data to USART 1
    USART1.TXDATAL = c;
}
void cdc_send_string(const char* str)
{
    for (uint8_t i=0; i < strlen(str); i++)
 156:	1f 5f       	subi	r17, 0xFF	; 255
 158:	ec cf       	rjmp	.-40     	; 0x132 <_Z15cdc_send_stringPKc+0xa>
    {
        cdc_send_char(str[i]);
    }
}
 15a:	df 91       	pop	r29
 15c:	cf 91       	pop	r28
 15e:	1f 91       	pop	r17
 160:	08 95       	ret

00000162 <_Z9cdc_printPKcz>:
void cdc_print(const char* text, ...)
{
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	cd b7       	in	r28, 0x3d	; 61
 168:	de b7       	in	r29, 0x3e	; 62
 16a:	c4 56       	subi	r28, 0x64	; 100
 16c:	d1 09       	sbc	r29, r1
 16e:	cd bf       	out	0x3d, r28	; 61
 170:	de bf       	out	0x3e, r29	; 62
 172:	ae 01       	movw	r20, r28
 174:	47 59       	subi	r20, 0x97	; 151
 176:	5f 4f       	sbci	r21, 0xFF	; 255
 178:	fa 01       	movw	r30, r20
 17a:	61 91       	ld	r22, Z+
 17c:	71 91       	ld	r23, Z+
 17e:	af 01       	movw	r20, r30
    va_list argptr;
    char buffer[100];
    
    va_start(argptr, text);
    vsprintf(buffer, text, argptr);
 180:	ce 01       	movw	r24, r28
 182:	01 96       	adiw	r24, 0x01	; 1
 184:	0e 94 07 01 	call	0x20e	; 0x20e <vsprintf>
    
    cdc_send_string(buffer);
 188:	ce 01       	movw	r24, r28
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	0e 94 94 00 	call	0x128	; 0x128 <_Z15cdc_send_stringPKc>
    va_end(argptr);
}
 190:	cc 59       	subi	r28, 0x9C	; 156
 192:	df 4f       	sbci	r29, 0xFF	; 255
 194:	cd bf       	out	0x3d, r28	; 61
 196:	de bf       	out	0x3e, r29	; 62
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <main>:

int main(void) {
    // Enable USART1 transmitter
    USART1.CTRLB    = USART_TXEN_bm;
 19e:	e0 e2       	ldi	r30, 0x20	; 32
 1a0:	f8 e0       	ldi	r31, 0x08	; 8
 1a2:	80 e4       	ldi	r24, 0x40	; 64
 1a4:	86 83       	std	Z+6, r24	; 0x06
    
    // Configure the baud rate of USART1
    USART1.BAUD     = BAUD(9600);
 1a6:	83 e8       	ldi	r24, 0x83	; 131
 1a8:	96 e0       	ldi	r25, 0x06	; 6
 1aa:	80 87       	std	Z+8, r24	; 0x08
 1ac:	91 87       	std	Z+9, r25	; 0x09
    
    // Make PC0 an output
    PORTC.DIRSET    = PIN0_bm;
 1ae:	e0 e4       	ldi	r30, 0x40	; 64
 1b0:	f4 e0       	ldi	r31, 0x04	; 4
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	81 83       	std	Z+1, r24	; 0x01
    
    // Make PC1 an input (optional as it is an input by default)
    PORTC.DIRCLR    = PIN1_bm;
 1b6:	92 e0       	ldi	r25, 0x02	; 2
 1b8:	92 83       	std	Z+2, r25	; 0x02
    
    // Make PD7 input (optional as it is an input by default)
    PORTD.DIRCLR    = PIN7_bm;
 1ba:	90 e8       	ldi	r25, 0x80	; 128
 1bc:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <__TEXT_REGION_LENGTH__+0x7e0462>
    
    // Connect ADC to PD7 (AIN7)
    ADC0.MUXPOS     = ADC_MUXPOS_AIN7_gc;
 1c0:	e0 e0       	ldi	r30, 0x00	; 0
 1c2:	f6 e0       	ldi	r31, 0x06	; 6
 1c4:	97 e0       	ldi	r25, 0x07	; 7
 1c6:	90 87       	std	Z+8, r25	; 0x08
    
    // Set the ADC clock divider (Max frequency for ADC is 2 MHz [F_CPU / DIV])
    ADC0.CTRLC      = ADC_PRESC_DIV2_gc;
 1c8:	12 82       	std	Z+2, r1	; 0x02
    
    // Enable ADC, default config = single ended, 12b mode
    ADC0.CTRLA      = ADC_ENABLE_bm;
 1ca:	80 83       	st	Z, r24
    uint16_t adc_result;
    
    while (1) 
    {
        // Start ADC measurement
        ADC0.COMMAND = ADC_STCONV_bm;
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
        
        // Wait for ADC measurement to be complete (blocking)
        while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 1d2:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
 1d6:	80 ff       	sbrs	r24, 0
 1d8:	fc cf       	rjmp	.-8      	; 0x1d2 <main+0x34>
        
        // Store ADC result in a variable
        adc_result = ADC0.RES;
 1da:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 1de:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
        
        // Print the ADC result
        cdc_print("ADC Result = %d\r\n", adc_result);
 1e2:	9f 93       	push	r25
 1e4:	8f 93       	push	r24
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	90 e4       	ldi	r25, 0x40	; 64
 1ea:	9f 93       	push	r25
 1ec:	8f 93       	push	r24
 1ee:	0e 94 b1 00 	call	0x162	; 0x162 <_Z9cdc_printPKcz>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f2:	2f e7       	ldi	r18, 0x7F	; 127
 1f4:	8a e1       	ldi	r24, 0x1A	; 26
 1f6:	96 e0       	ldi	r25, 0x06	; 6
 1f8:	21 50       	subi	r18, 0x01	; 1
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	90 40       	sbci	r25, 0x00	; 0
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <main+0x5a>
 200:	00 c0       	rjmp	.+0      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 202:	00 00       	nop
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	df cf       	rjmp	.-66     	; 0x1cc <main+0x2e>

0000020e <vsprintf>:
 20e:	0f 93       	push	r16
 210:	1f 93       	push	r17
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
 21a:	2e 97       	sbiw	r28, 0x0e	; 14
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	de bf       	out	0x3e, r29	; 62
 220:	8c 01       	movw	r16, r24
 222:	86 e0       	ldi	r24, 0x06	; 6
 224:	8c 83       	std	Y+4, r24	; 0x04
 226:	09 83       	std	Y+1, r16	; 0x01
 228:	1a 83       	std	Y+2, r17	; 0x02
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	9f e7       	ldi	r25, 0x7F	; 127
 22e:	8d 83       	std	Y+5, r24	; 0x05
 230:	9e 83       	std	Y+6, r25	; 0x06
 232:	ce 01       	movw	r24, r28
 234:	01 96       	adiw	r24, 0x01	; 1
 236:	0e 94 2a 01 	call	0x254	; 0x254 <vfprintf>
 23a:	ef 81       	ldd	r30, Y+7	; 0x07
 23c:	f8 85       	ldd	r31, Y+8	; 0x08
 23e:	e0 0f       	add	r30, r16
 240:	f1 1f       	adc	r31, r17
 242:	10 82       	st	Z, r1
 244:	2e 96       	adiw	r28, 0x0e	; 14
 246:	cd bf       	out	0x3d, r28	; 61
 248:	de bf       	out	0x3e, r29	; 62
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	08 95       	ret

00000254 <vfprintf>:
 254:	2f 92       	push	r2
 256:	3f 92       	push	r3
 258:	4f 92       	push	r4
 25a:	5f 92       	push	r5
 25c:	6f 92       	push	r6
 25e:	7f 92       	push	r7
 260:	8f 92       	push	r8
 262:	9f 92       	push	r9
 264:	af 92       	push	r10
 266:	bf 92       	push	r11
 268:	cf 92       	push	r12
 26a:	df 92       	push	r13
 26c:	ef 92       	push	r14
 26e:	ff 92       	push	r15
 270:	0f 93       	push	r16
 272:	1f 93       	push	r17
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
 278:	cd b7       	in	r28, 0x3d	; 61
 27a:	de b7       	in	r29, 0x3e	; 62
 27c:	2b 97       	sbiw	r28, 0x0b	; 11
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	de bf       	out	0x3e, r29	; 62
 282:	6c 01       	movw	r12, r24
 284:	7b 01       	movw	r14, r22
 286:	8a 01       	movw	r16, r20
 288:	fc 01       	movw	r30, r24
 28a:	16 82       	std	Z+6, r1	; 0x06
 28c:	17 82       	std	Z+7, r1	; 0x07
 28e:	83 81       	ldd	r24, Z+3	; 0x03
 290:	81 ff       	sbrs	r24, 1
 292:	cc c1       	rjmp	.+920    	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	3c 01       	movw	r6, r24
 29a:	f6 01       	movw	r30, r12
 29c:	93 81       	ldd	r25, Z+3	; 0x03
 29e:	f7 01       	movw	r30, r14
 2a0:	93 fd       	sbrc	r25, 3
 2a2:	85 91       	lpm	r24, Z+
 2a4:	93 ff       	sbrs	r25, 3
 2a6:	81 91       	ld	r24, Z+
 2a8:	7f 01       	movw	r14, r30
 2aa:	88 23       	and	r24, r24
 2ac:	09 f4       	brne	.+2      	; 0x2b0 <vfprintf+0x5c>
 2ae:	ba c1       	rjmp	.+884    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	39 f4       	brne	.+14     	; 0x2c2 <vfprintf+0x6e>
 2b4:	93 fd       	sbrc	r25, 3
 2b6:	85 91       	lpm	r24, Z+
 2b8:	93 ff       	sbrs	r25, 3
 2ba:	81 91       	ld	r24, Z+
 2bc:	7f 01       	movw	r14, r30
 2be:	85 32       	cpi	r24, 0x25	; 37
 2c0:	29 f4       	brne	.+10     	; 0x2cc <vfprintf+0x78>
 2c2:	b6 01       	movw	r22, r12
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 2ca:	e7 cf       	rjmp	.-50     	; 0x29a <vfprintf+0x46>
 2cc:	91 2c       	mov	r9, r1
 2ce:	21 2c       	mov	r2, r1
 2d0:	31 2c       	mov	r3, r1
 2d2:	ff e1       	ldi	r31, 0x1F	; 31
 2d4:	f3 15       	cp	r31, r3
 2d6:	d8 f0       	brcs	.+54     	; 0x30e <vfprintf+0xba>
 2d8:	8b 32       	cpi	r24, 0x2B	; 43
 2da:	79 f0       	breq	.+30     	; 0x2fa <vfprintf+0xa6>
 2dc:	38 f4       	brcc	.+14     	; 0x2ec <vfprintf+0x98>
 2de:	80 32       	cpi	r24, 0x20	; 32
 2e0:	79 f0       	breq	.+30     	; 0x300 <vfprintf+0xac>
 2e2:	83 32       	cpi	r24, 0x23	; 35
 2e4:	a1 f4       	brne	.+40     	; 0x30e <vfprintf+0xba>
 2e6:	23 2d       	mov	r18, r3
 2e8:	20 61       	ori	r18, 0x10	; 16
 2ea:	1d c0       	rjmp	.+58     	; 0x326 <vfprintf+0xd2>
 2ec:	8d 32       	cpi	r24, 0x2D	; 45
 2ee:	61 f0       	breq	.+24     	; 0x308 <vfprintf+0xb4>
 2f0:	80 33       	cpi	r24, 0x30	; 48
 2f2:	69 f4       	brne	.+26     	; 0x30e <vfprintf+0xba>
 2f4:	23 2d       	mov	r18, r3
 2f6:	21 60       	ori	r18, 0x01	; 1
 2f8:	16 c0       	rjmp	.+44     	; 0x326 <vfprintf+0xd2>
 2fa:	83 2d       	mov	r24, r3
 2fc:	82 60       	ori	r24, 0x02	; 2
 2fe:	38 2e       	mov	r3, r24
 300:	e3 2d       	mov	r30, r3
 302:	e4 60       	ori	r30, 0x04	; 4
 304:	3e 2e       	mov	r3, r30
 306:	2a c0       	rjmp	.+84     	; 0x35c <vfprintf+0x108>
 308:	f3 2d       	mov	r31, r3
 30a:	f8 60       	ori	r31, 0x08	; 8
 30c:	1d c0       	rjmp	.+58     	; 0x348 <vfprintf+0xf4>
 30e:	37 fc       	sbrc	r3, 7
 310:	2d c0       	rjmp	.+90     	; 0x36c <vfprintf+0x118>
 312:	20 ed       	ldi	r18, 0xD0	; 208
 314:	28 0f       	add	r18, r24
 316:	2a 30       	cpi	r18, 0x0A	; 10
 318:	40 f0       	brcs	.+16     	; 0x32a <vfprintf+0xd6>
 31a:	8e 32       	cpi	r24, 0x2E	; 46
 31c:	b9 f4       	brne	.+46     	; 0x34c <vfprintf+0xf8>
 31e:	36 fc       	sbrc	r3, 6
 320:	81 c1       	rjmp	.+770    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 322:	23 2d       	mov	r18, r3
 324:	20 64       	ori	r18, 0x40	; 64
 326:	32 2e       	mov	r3, r18
 328:	19 c0       	rjmp	.+50     	; 0x35c <vfprintf+0x108>
 32a:	36 fe       	sbrs	r3, 6
 32c:	06 c0       	rjmp	.+12     	; 0x33a <vfprintf+0xe6>
 32e:	8a e0       	ldi	r24, 0x0A	; 10
 330:	98 9e       	mul	r9, r24
 332:	20 0d       	add	r18, r0
 334:	11 24       	eor	r1, r1
 336:	92 2e       	mov	r9, r18
 338:	11 c0       	rjmp	.+34     	; 0x35c <vfprintf+0x108>
 33a:	ea e0       	ldi	r30, 0x0A	; 10
 33c:	2e 9e       	mul	r2, r30
 33e:	20 0d       	add	r18, r0
 340:	11 24       	eor	r1, r1
 342:	22 2e       	mov	r2, r18
 344:	f3 2d       	mov	r31, r3
 346:	f0 62       	ori	r31, 0x20	; 32
 348:	3f 2e       	mov	r3, r31
 34a:	08 c0       	rjmp	.+16     	; 0x35c <vfprintf+0x108>
 34c:	8c 36       	cpi	r24, 0x6C	; 108
 34e:	21 f4       	brne	.+8      	; 0x358 <vfprintf+0x104>
 350:	83 2d       	mov	r24, r3
 352:	80 68       	ori	r24, 0x80	; 128
 354:	38 2e       	mov	r3, r24
 356:	02 c0       	rjmp	.+4      	; 0x35c <vfprintf+0x108>
 358:	88 36       	cpi	r24, 0x68	; 104
 35a:	41 f4       	brne	.+16     	; 0x36c <vfprintf+0x118>
 35c:	f7 01       	movw	r30, r14
 35e:	93 fd       	sbrc	r25, 3
 360:	85 91       	lpm	r24, Z+
 362:	93 ff       	sbrs	r25, 3
 364:	81 91       	ld	r24, Z+
 366:	7f 01       	movw	r14, r30
 368:	81 11       	cpse	r24, r1
 36a:	b3 cf       	rjmp	.-154    	; 0x2d2 <vfprintf+0x7e>
 36c:	98 2f       	mov	r25, r24
 36e:	9f 7d       	andi	r25, 0xDF	; 223
 370:	95 54       	subi	r25, 0x45	; 69
 372:	93 30       	cpi	r25, 0x03	; 3
 374:	28 f4       	brcc	.+10     	; 0x380 <vfprintf+0x12c>
 376:	0c 5f       	subi	r16, 0xFC	; 252
 378:	1f 4f       	sbci	r17, 0xFF	; 255
 37a:	9f e3       	ldi	r25, 0x3F	; 63
 37c:	99 83       	std	Y+1, r25	; 0x01
 37e:	0d c0       	rjmp	.+26     	; 0x39a <vfprintf+0x146>
 380:	83 36       	cpi	r24, 0x63	; 99
 382:	31 f0       	breq	.+12     	; 0x390 <vfprintf+0x13c>
 384:	83 37       	cpi	r24, 0x73	; 115
 386:	71 f0       	breq	.+28     	; 0x3a4 <vfprintf+0x150>
 388:	83 35       	cpi	r24, 0x53	; 83
 38a:	09 f0       	breq	.+2      	; 0x38e <vfprintf+0x13a>
 38c:	59 c0       	rjmp	.+178    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 38e:	21 c0       	rjmp	.+66     	; 0x3d2 <vfprintf+0x17e>
 390:	f8 01       	movw	r30, r16
 392:	80 81       	ld	r24, Z
 394:	89 83       	std	Y+1, r24	; 0x01
 396:	0e 5f       	subi	r16, 0xFE	; 254
 398:	1f 4f       	sbci	r17, 0xFF	; 255
 39a:	88 24       	eor	r8, r8
 39c:	83 94       	inc	r8
 39e:	91 2c       	mov	r9, r1
 3a0:	53 01       	movw	r10, r6
 3a2:	13 c0       	rjmp	.+38     	; 0x3ca <vfprintf+0x176>
 3a4:	28 01       	movw	r4, r16
 3a6:	f2 e0       	ldi	r31, 0x02	; 2
 3a8:	4f 0e       	add	r4, r31
 3aa:	51 1c       	adc	r5, r1
 3ac:	f8 01       	movw	r30, r16
 3ae:	a0 80       	ld	r10, Z
 3b0:	b1 80       	ldd	r11, Z+1	; 0x01
 3b2:	36 fe       	sbrs	r3, 6
 3b4:	03 c0       	rjmp	.+6      	; 0x3bc <vfprintf+0x168>
 3b6:	69 2d       	mov	r22, r9
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <vfprintf+0x16c>
 3bc:	6f ef       	ldi	r22, 0xFF	; 255
 3be:	7f ef       	ldi	r23, 0xFF	; 255
 3c0:	c5 01       	movw	r24, r10
 3c2:	0e 94 39 03 	call	0x672	; 0x672 <strnlen>
 3c6:	4c 01       	movw	r8, r24
 3c8:	82 01       	movw	r16, r4
 3ca:	f3 2d       	mov	r31, r3
 3cc:	ff 77       	andi	r31, 0x7F	; 127
 3ce:	3f 2e       	mov	r3, r31
 3d0:	16 c0       	rjmp	.+44     	; 0x3fe <vfprintf+0x1aa>
 3d2:	28 01       	movw	r4, r16
 3d4:	22 e0       	ldi	r18, 0x02	; 2
 3d6:	42 0e       	add	r4, r18
 3d8:	51 1c       	adc	r5, r1
 3da:	f8 01       	movw	r30, r16
 3dc:	a0 80       	ld	r10, Z
 3de:	b1 80       	ldd	r11, Z+1	; 0x01
 3e0:	36 fe       	sbrs	r3, 6
 3e2:	03 c0       	rjmp	.+6      	; 0x3ea <vfprintf+0x196>
 3e4:	69 2d       	mov	r22, r9
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <vfprintf+0x19a>
 3ea:	6f ef       	ldi	r22, 0xFF	; 255
 3ec:	7f ef       	ldi	r23, 0xFF	; 255
 3ee:	c5 01       	movw	r24, r10
 3f0:	0e 94 2e 03 	call	0x65c	; 0x65c <strnlen_P>
 3f4:	4c 01       	movw	r8, r24
 3f6:	f3 2d       	mov	r31, r3
 3f8:	f0 68       	ori	r31, 0x80	; 128
 3fa:	3f 2e       	mov	r3, r31
 3fc:	82 01       	movw	r16, r4
 3fe:	33 fc       	sbrc	r3, 3
 400:	1b c0       	rjmp	.+54     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 402:	82 2d       	mov	r24, r2
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	88 16       	cp	r8, r24
 408:	99 06       	cpc	r9, r25
 40a:	b0 f4       	brcc	.+44     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 40c:	b6 01       	movw	r22, r12
 40e:	80 e2       	ldi	r24, 0x20	; 32
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 416:	2a 94       	dec	r2
 418:	f4 cf       	rjmp	.-24     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 41a:	f5 01       	movw	r30, r10
 41c:	37 fc       	sbrc	r3, 7
 41e:	85 91       	lpm	r24, Z+
 420:	37 fe       	sbrs	r3, 7
 422:	81 91       	ld	r24, Z+
 424:	5f 01       	movw	r10, r30
 426:	b6 01       	movw	r22, r12
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 42e:	21 10       	cpse	r2, r1
 430:	2a 94       	dec	r2
 432:	21 e0       	ldi	r18, 0x01	; 1
 434:	82 1a       	sub	r8, r18
 436:	91 08       	sbc	r9, r1
 438:	81 14       	cp	r8, r1
 43a:	91 04       	cpc	r9, r1
 43c:	71 f7       	brne	.-36     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 43e:	e8 c0       	rjmp	.+464    	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 440:	84 36       	cpi	r24, 0x64	; 100
 442:	11 f0       	breq	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	89 36       	cpi	r24, 0x69	; 105
 446:	41 f5       	brne	.+80     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 448:	f8 01       	movw	r30, r16
 44a:	37 fe       	sbrs	r3, 7
 44c:	07 c0       	rjmp	.+14     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 44e:	60 81       	ld	r22, Z
 450:	71 81       	ldd	r23, Z+1	; 0x01
 452:	82 81       	ldd	r24, Z+2	; 0x02
 454:	93 81       	ldd	r25, Z+3	; 0x03
 456:	0c 5f       	subi	r16, 0xFC	; 252
 458:	1f 4f       	sbci	r17, 0xFF	; 255
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 45c:	60 81       	ld	r22, Z
 45e:	71 81       	ldd	r23, Z+1	; 0x01
 460:	07 2e       	mov	r0, r23
 462:	00 0c       	add	r0, r0
 464:	88 0b       	sbc	r24, r24
 466:	99 0b       	sbc	r25, r25
 468:	0e 5f       	subi	r16, 0xFE	; 254
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	f3 2d       	mov	r31, r3
 46e:	ff 76       	andi	r31, 0x6F	; 111
 470:	3f 2e       	mov	r3, r31
 472:	97 ff       	sbrs	r25, 7
 474:	09 c0       	rjmp	.+18     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 476:	90 95       	com	r25
 478:	80 95       	com	r24
 47a:	70 95       	com	r23
 47c:	61 95       	neg	r22
 47e:	7f 4f       	sbci	r23, 0xFF	; 255
 480:	8f 4f       	sbci	r24, 0xFF	; 255
 482:	9f 4f       	sbci	r25, 0xFF	; 255
 484:	f0 68       	ori	r31, 0x80	; 128
 486:	3f 2e       	mov	r3, r31
 488:	2a e0       	ldi	r18, 0x0A	; 10
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	a3 01       	movw	r20, r6
 48e:	0e 94 80 03 	call	0x700	; 0x700 <__ultoa_invert>
 492:	88 2e       	mov	r8, r24
 494:	86 18       	sub	r8, r6
 496:	45 c0       	rjmp	.+138    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 498:	85 37       	cpi	r24, 0x75	; 117
 49a:	31 f4       	brne	.+12     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 49c:	23 2d       	mov	r18, r3
 49e:	2f 7e       	andi	r18, 0xEF	; 239
 4a0:	b2 2e       	mov	r11, r18
 4a2:	2a e0       	ldi	r18, 0x0A	; 10
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	25 c0       	rjmp	.+74     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4a8:	93 2d       	mov	r25, r3
 4aa:	99 7f       	andi	r25, 0xF9	; 249
 4ac:	b9 2e       	mov	r11, r25
 4ae:	8f 36       	cpi	r24, 0x6F	; 111
 4b0:	c1 f0       	breq	.+48     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4b2:	18 f4       	brcc	.+6      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b4:	88 35       	cpi	r24, 0x58	; 88
 4b6:	79 f0       	breq	.+30     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4b8:	b5 c0       	rjmp	.+362    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 4ba:	80 37       	cpi	r24, 0x70	; 112
 4bc:	19 f0       	breq	.+6      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4be:	88 37       	cpi	r24, 0x78	; 120
 4c0:	21 f0       	breq	.+8      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c2:	b0 c0       	rjmp	.+352    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 4c4:	e9 2f       	mov	r30, r25
 4c6:	e0 61       	ori	r30, 0x10	; 16
 4c8:	be 2e       	mov	r11, r30
 4ca:	b4 fe       	sbrs	r11, 4
 4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4ce:	fb 2d       	mov	r31, r11
 4d0:	f4 60       	ori	r31, 0x04	; 4
 4d2:	bf 2e       	mov	r11, r31
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4d6:	34 fe       	sbrs	r3, 4
 4d8:	0a c0       	rjmp	.+20     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4da:	29 2f       	mov	r18, r25
 4dc:	26 60       	ori	r18, 0x06	; 6
 4de:	b2 2e       	mov	r11, r18
 4e0:	06 c0       	rjmp	.+12     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4e2:	28 e0       	ldi	r18, 0x08	; 8
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e8:	20 e1       	ldi	r18, 0x10	; 16
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ee:	20 e1       	ldi	r18, 0x10	; 16
 4f0:	32 e0       	ldi	r19, 0x02	; 2
 4f2:	f8 01       	movw	r30, r16
 4f4:	b7 fe       	sbrs	r11, 7
 4f6:	07 c0       	rjmp	.+14     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	82 81       	ldd	r24, Z+2	; 0x02
 4fe:	93 81       	ldd	r25, Z+3	; 0x03
 500:	0c 5f       	subi	r16, 0xFC	; 252
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	06 c0       	rjmp	.+12     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 506:	60 81       	ld	r22, Z
 508:	71 81       	ldd	r23, Z+1	; 0x01
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	0e 5f       	subi	r16, 0xFE	; 254
 510:	1f 4f       	sbci	r17, 0xFF	; 255
 512:	a3 01       	movw	r20, r6
 514:	0e 94 80 03 	call	0x700	; 0x700 <__ultoa_invert>
 518:	88 2e       	mov	r8, r24
 51a:	86 18       	sub	r8, r6
 51c:	fb 2d       	mov	r31, r11
 51e:	ff 77       	andi	r31, 0x7F	; 127
 520:	3f 2e       	mov	r3, r31
 522:	36 fe       	sbrs	r3, 6
 524:	0d c0       	rjmp	.+26     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 526:	23 2d       	mov	r18, r3
 528:	2e 7f       	andi	r18, 0xFE	; 254
 52a:	a2 2e       	mov	r10, r18
 52c:	89 14       	cp	r8, r9
 52e:	58 f4       	brcc	.+22     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 530:	34 fe       	sbrs	r3, 4
 532:	0b c0       	rjmp	.+22     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 534:	32 fc       	sbrc	r3, 2
 536:	09 c0       	rjmp	.+18     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 538:	83 2d       	mov	r24, r3
 53a:	8e 7e       	andi	r24, 0xEE	; 238
 53c:	a8 2e       	mov	r10, r24
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 540:	b8 2c       	mov	r11, r8
 542:	a3 2c       	mov	r10, r3
 544:	03 c0       	rjmp	.+6      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 546:	b8 2c       	mov	r11, r8
 548:	01 c0       	rjmp	.+2      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 54a:	b9 2c       	mov	r11, r9
 54c:	a4 fe       	sbrs	r10, 4
 54e:	0f c0       	rjmp	.+30     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 550:	fe 01       	movw	r30, r28
 552:	e8 0d       	add	r30, r8
 554:	f1 1d       	adc	r31, r1
 556:	80 81       	ld	r24, Z
 558:	80 33       	cpi	r24, 0x30	; 48
 55a:	21 f4       	brne	.+8      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55c:	9a 2d       	mov	r25, r10
 55e:	99 7e       	andi	r25, 0xE9	; 233
 560:	a9 2e       	mov	r10, r25
 562:	09 c0       	rjmp	.+18     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 564:	a2 fe       	sbrs	r10, 2
 566:	06 c0       	rjmp	.+12     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 568:	b3 94       	inc	r11
 56a:	b3 94       	inc	r11
 56c:	04 c0       	rjmp	.+8      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 56e:	8a 2d       	mov	r24, r10
 570:	86 78       	andi	r24, 0x86	; 134
 572:	09 f0       	breq	.+2      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 574:	b3 94       	inc	r11
 576:	a3 fc       	sbrc	r10, 3
 578:	11 c0       	rjmp	.+34     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 57a:	a0 fe       	sbrs	r10, 0
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 57e:	b2 14       	cp	r11, r2
 580:	88 f4       	brcc	.+34     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 582:	28 0c       	add	r2, r8
 584:	92 2c       	mov	r9, r2
 586:	9b 18       	sub	r9, r11
 588:	0e c0       	rjmp	.+28     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 58a:	b2 14       	cp	r11, r2
 58c:	60 f4       	brcc	.+24     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 58e:	b6 01       	movw	r22, r12
 590:	80 e2       	ldi	r24, 0x20	; 32
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 598:	b3 94       	inc	r11
 59a:	f7 cf       	rjmp	.-18     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 59c:	b2 14       	cp	r11, r2
 59e:	18 f4       	brcc	.+6      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5a0:	2b 18       	sub	r2, r11
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a4:	98 2c       	mov	r9, r8
 5a6:	21 2c       	mov	r2, r1
 5a8:	a4 fe       	sbrs	r10, 4
 5aa:	10 c0       	rjmp	.+32     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e3       	ldi	r24, 0x30	; 48
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 5b6:	a2 fe       	sbrs	r10, 2
 5b8:	17 c0       	rjmp	.+46     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5ba:	a1 fc       	sbrc	r10, 1
 5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5be:	88 e7       	ldi	r24, 0x78	; 120
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5c4:	88 e5       	ldi	r24, 0x58	; 88
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	b6 01       	movw	r22, r12
 5ca:	0c c0       	rjmp	.+24     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5cc:	8a 2d       	mov	r24, r10
 5ce:	86 78       	andi	r24, 0x86	; 134
 5d0:	59 f0       	breq	.+22     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d2:	a1 fe       	sbrs	r10, 1
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5d6:	8b e2       	ldi	r24, 0x2B	; 43
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5da:	80 e2       	ldi	r24, 0x20	; 32
 5dc:	a7 fc       	sbrc	r10, 7
 5de:	8d e2       	ldi	r24, 0x2D	; 45
 5e0:	b6 01       	movw	r22, r12
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 5e8:	89 14       	cp	r8, r9
 5ea:	38 f4       	brcc	.+14     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5ec:	b6 01       	movw	r22, r12
 5ee:	80 e3       	ldi	r24, 0x30	; 48
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 5f6:	9a 94       	dec	r9
 5f8:	f7 cf       	rjmp	.-18     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5fa:	8a 94       	dec	r8
 5fc:	f3 01       	movw	r30, r6
 5fe:	e8 0d       	add	r30, r8
 600:	f1 1d       	adc	r31, r1
 602:	80 81       	ld	r24, Z
 604:	b6 01       	movw	r22, r12
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 60c:	81 10       	cpse	r8, r1
 60e:	f5 cf       	rjmp	.-22     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 610:	22 20       	and	r2, r2
 612:	09 f4       	brne	.+2      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 614:	42 ce       	rjmp	.-892    	; 0x29a <vfprintf+0x46>
 616:	b6 01       	movw	r22, r12
 618:	80 e2       	ldi	r24, 0x20	; 32
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 44 03 	call	0x688	; 0x688 <fputc>
 620:	2a 94       	dec	r2
 622:	f6 cf       	rjmp	.-20     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 624:	f6 01       	movw	r30, r12
 626:	86 81       	ldd	r24, Z+6	; 0x06
 628:	97 81       	ldd	r25, Z+7	; 0x07
 62a:	02 c0       	rjmp	.+4      	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	2b 96       	adiw	r28, 0x0b	; 11
 632:	cd bf       	out	0x3d, r28	; 61
 634:	de bf       	out	0x3e, r29	; 62
 636:	df 91       	pop	r29
 638:	cf 91       	pop	r28
 63a:	1f 91       	pop	r17
 63c:	0f 91       	pop	r16
 63e:	ff 90       	pop	r15
 640:	ef 90       	pop	r14
 642:	df 90       	pop	r13
 644:	cf 90       	pop	r12
 646:	bf 90       	pop	r11
 648:	af 90       	pop	r10
 64a:	9f 90       	pop	r9
 64c:	8f 90       	pop	r8
 64e:	7f 90       	pop	r7
 650:	6f 90       	pop	r6
 652:	5f 90       	pop	r5
 654:	4f 90       	pop	r4
 656:	3f 90       	pop	r3
 658:	2f 90       	pop	r2
 65a:	08 95       	ret

0000065c <strnlen_P>:
 65c:	fc 01       	movw	r30, r24
 65e:	05 90       	lpm	r0, Z+
 660:	61 50       	subi	r22, 0x01	; 1
 662:	70 40       	sbci	r23, 0x00	; 0
 664:	01 10       	cpse	r0, r1
 666:	d8 f7       	brcc	.-10     	; 0x65e <strnlen_P+0x2>
 668:	80 95       	com	r24
 66a:	90 95       	com	r25
 66c:	8e 0f       	add	r24, r30
 66e:	9f 1f       	adc	r25, r31
 670:	08 95       	ret

00000672 <strnlen>:
 672:	fc 01       	movw	r30, r24
 674:	61 50       	subi	r22, 0x01	; 1
 676:	70 40       	sbci	r23, 0x00	; 0
 678:	01 90       	ld	r0, Z+
 67a:	01 10       	cpse	r0, r1
 67c:	d8 f7       	brcc	.-10     	; 0x674 <strnlen+0x2>
 67e:	80 95       	com	r24
 680:	90 95       	com	r25
 682:	8e 0f       	add	r24, r30
 684:	9f 1f       	adc	r25, r31
 686:	08 95       	ret

00000688 <fputc>:
 688:	0f 93       	push	r16
 68a:	1f 93       	push	r17
 68c:	cf 93       	push	r28
 68e:	df 93       	push	r29
 690:	fb 01       	movw	r30, r22
 692:	23 81       	ldd	r18, Z+3	; 0x03
 694:	21 fd       	sbrc	r18, 1
 696:	03 c0       	rjmp	.+6      	; 0x69e <fputc+0x16>
 698:	8f ef       	ldi	r24, 0xFF	; 255
 69a:	9f ef       	ldi	r25, 0xFF	; 255
 69c:	2c c0       	rjmp	.+88     	; 0x6f6 <fputc+0x6e>
 69e:	22 ff       	sbrs	r18, 2
 6a0:	16 c0       	rjmp	.+44     	; 0x6ce <fputc+0x46>
 6a2:	46 81       	ldd	r20, Z+6	; 0x06
 6a4:	57 81       	ldd	r21, Z+7	; 0x07
 6a6:	24 81       	ldd	r18, Z+4	; 0x04
 6a8:	35 81       	ldd	r19, Z+5	; 0x05
 6aa:	42 17       	cp	r20, r18
 6ac:	53 07       	cpc	r21, r19
 6ae:	44 f4       	brge	.+16     	; 0x6c0 <fputc+0x38>
 6b0:	a0 81       	ld	r26, Z
 6b2:	b1 81       	ldd	r27, Z+1	; 0x01
 6b4:	9d 01       	movw	r18, r26
 6b6:	2f 5f       	subi	r18, 0xFF	; 255
 6b8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ba:	20 83       	st	Z, r18
 6bc:	31 83       	std	Z+1, r19	; 0x01
 6be:	8c 93       	st	X, r24
 6c0:	26 81       	ldd	r18, Z+6	; 0x06
 6c2:	37 81       	ldd	r19, Z+7	; 0x07
 6c4:	2f 5f       	subi	r18, 0xFF	; 255
 6c6:	3f 4f       	sbci	r19, 0xFF	; 255
 6c8:	26 83       	std	Z+6, r18	; 0x06
 6ca:	37 83       	std	Z+7, r19	; 0x07
 6cc:	14 c0       	rjmp	.+40     	; 0x6f6 <fputc+0x6e>
 6ce:	8b 01       	movw	r16, r22
 6d0:	ec 01       	movw	r28, r24
 6d2:	fb 01       	movw	r30, r22
 6d4:	00 84       	ldd	r0, Z+8	; 0x08
 6d6:	f1 85       	ldd	r31, Z+9	; 0x09
 6d8:	e0 2d       	mov	r30, r0
 6da:	09 95       	icall
 6dc:	89 2b       	or	r24, r25
 6de:	e1 f6       	brne	.-72     	; 0x698 <fputc+0x10>
 6e0:	d8 01       	movw	r26, r16
 6e2:	16 96       	adiw	r26, 0x06	; 6
 6e4:	8d 91       	ld	r24, X+
 6e6:	9c 91       	ld	r25, X
 6e8:	17 97       	sbiw	r26, 0x07	; 7
 6ea:	01 96       	adiw	r24, 0x01	; 1
 6ec:	16 96       	adiw	r26, 0x06	; 6
 6ee:	8d 93       	st	X+, r24
 6f0:	9c 93       	st	X, r25
 6f2:	17 97       	sbiw	r26, 0x07	; 7
 6f4:	ce 01       	movw	r24, r28
 6f6:	df 91       	pop	r29
 6f8:	cf 91       	pop	r28
 6fa:	1f 91       	pop	r17
 6fc:	0f 91       	pop	r16
 6fe:	08 95       	ret

00000700 <__ultoa_invert>:
 700:	fa 01       	movw	r30, r20
 702:	aa 27       	eor	r26, r26
 704:	28 30       	cpi	r18, 0x08	; 8
 706:	51 f1       	breq	.+84     	; 0x75c <__ultoa_invert+0x5c>
 708:	20 31       	cpi	r18, 0x10	; 16
 70a:	81 f1       	breq	.+96     	; 0x76c <__ultoa_invert+0x6c>
 70c:	e8 94       	clt
 70e:	6f 93       	push	r22
 710:	6e 7f       	andi	r22, 0xFE	; 254
 712:	6e 5f       	subi	r22, 0xFE	; 254
 714:	7f 4f       	sbci	r23, 0xFF	; 255
 716:	8f 4f       	sbci	r24, 0xFF	; 255
 718:	9f 4f       	sbci	r25, 0xFF	; 255
 71a:	af 4f       	sbci	r26, 0xFF	; 255
 71c:	b1 e0       	ldi	r27, 0x01	; 1
 71e:	3e d0       	rcall	.+124    	; 0x79c <__ultoa_invert+0x9c>
 720:	b4 e0       	ldi	r27, 0x04	; 4
 722:	3c d0       	rcall	.+120    	; 0x79c <__ultoa_invert+0x9c>
 724:	67 0f       	add	r22, r23
 726:	78 1f       	adc	r23, r24
 728:	89 1f       	adc	r24, r25
 72a:	9a 1f       	adc	r25, r26
 72c:	a1 1d       	adc	r26, r1
 72e:	68 0f       	add	r22, r24
 730:	79 1f       	adc	r23, r25
 732:	8a 1f       	adc	r24, r26
 734:	91 1d       	adc	r25, r1
 736:	a1 1d       	adc	r26, r1
 738:	6a 0f       	add	r22, r26
 73a:	71 1d       	adc	r23, r1
 73c:	81 1d       	adc	r24, r1
 73e:	91 1d       	adc	r25, r1
 740:	a1 1d       	adc	r26, r1
 742:	20 d0       	rcall	.+64     	; 0x784 <__ultoa_invert+0x84>
 744:	09 f4       	brne	.+2      	; 0x748 <__ultoa_invert+0x48>
 746:	68 94       	set
 748:	3f 91       	pop	r19
 74a:	2a e0       	ldi	r18, 0x0A	; 10
 74c:	26 9f       	mul	r18, r22
 74e:	11 24       	eor	r1, r1
 750:	30 19       	sub	r19, r0
 752:	30 5d       	subi	r19, 0xD0	; 208
 754:	31 93       	st	Z+, r19
 756:	de f6       	brtc	.-74     	; 0x70e <__ultoa_invert+0xe>
 758:	cf 01       	movw	r24, r30
 75a:	08 95       	ret
 75c:	46 2f       	mov	r20, r22
 75e:	47 70       	andi	r20, 0x07	; 7
 760:	40 5d       	subi	r20, 0xD0	; 208
 762:	41 93       	st	Z+, r20
 764:	b3 e0       	ldi	r27, 0x03	; 3
 766:	0f d0       	rcall	.+30     	; 0x786 <__ultoa_invert+0x86>
 768:	c9 f7       	brne	.-14     	; 0x75c <__ultoa_invert+0x5c>
 76a:	f6 cf       	rjmp	.-20     	; 0x758 <__ultoa_invert+0x58>
 76c:	46 2f       	mov	r20, r22
 76e:	4f 70       	andi	r20, 0x0F	; 15
 770:	40 5d       	subi	r20, 0xD0	; 208
 772:	4a 33       	cpi	r20, 0x3A	; 58
 774:	18 f0       	brcs	.+6      	; 0x77c <__ultoa_invert+0x7c>
 776:	49 5d       	subi	r20, 0xD9	; 217
 778:	31 fd       	sbrc	r19, 1
 77a:	40 52       	subi	r20, 0x20	; 32
 77c:	41 93       	st	Z+, r20
 77e:	02 d0       	rcall	.+4      	; 0x784 <__ultoa_invert+0x84>
 780:	a9 f7       	brne	.-22     	; 0x76c <__ultoa_invert+0x6c>
 782:	ea cf       	rjmp	.-44     	; 0x758 <__ultoa_invert+0x58>
 784:	b4 e0       	ldi	r27, 0x04	; 4
 786:	a6 95       	lsr	r26
 788:	97 95       	ror	r25
 78a:	87 95       	ror	r24
 78c:	77 95       	ror	r23
 78e:	67 95       	ror	r22
 790:	ba 95       	dec	r27
 792:	c9 f7       	brne	.-14     	; 0x786 <__ultoa_invert+0x86>
 794:	00 97       	sbiw	r24, 0x00	; 0
 796:	61 05       	cpc	r22, r1
 798:	71 05       	cpc	r23, r1
 79a:	08 95       	ret
 79c:	9b 01       	movw	r18, r22
 79e:	ac 01       	movw	r20, r24
 7a0:	0a 2e       	mov	r0, r26
 7a2:	06 94       	lsr	r0
 7a4:	57 95       	ror	r21
 7a6:	47 95       	ror	r20
 7a8:	37 95       	ror	r19
 7aa:	27 95       	ror	r18
 7ac:	ba 95       	dec	r27
 7ae:	c9 f7       	brne	.-14     	; 0x7a2 <__ultoa_invert+0xa2>
 7b0:	62 0f       	add	r22, r18
 7b2:	73 1f       	adc	r23, r19
 7b4:	84 1f       	adc	r24, r20
 7b6:	95 1f       	adc	r25, r21
 7b8:	a0 1d       	adc	r26, r0
 7ba:	08 95       	ret

000007bc <_exit>:
 7bc:	f8 94       	cli

000007be <__stop_program>:
 7be:	ff cf       	rjmp	.-2      	; 0x7be <__stop_program>
